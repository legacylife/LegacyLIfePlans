{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/shared/components/advisor-header/advisor-header-top.component.html","webpack:///./src/app/shared/components/advisor-header/advisor-header-top.component.ts","webpack:///./src/app/shared/components/breadcrumb/breadcrumb.component.html","webpack:///./src/app/shared/components/breadcrumb/breadcrumb.component.scss","webpack:///./src/app/shared/components/breadcrumb/breadcrumb.component.ts","webpack:///./src/app/shared/components/customer-header/customer-header-top.component.html","webpack:///./src/app/shared/components/customer-header/customer-header-top.component.ts","webpack:///./src/app/shared/components/customizer/customizer.component.html","webpack:///./src/app/shared/components/customizer/customizer.component.scss","webpack:///./src/app/shared/components/customizer/customizer.component.ts","webpack:///./src/app/shared/components/header-side/header-side.component.ts","webpack:///./src/app/shared/components/header-side/header-side.template.html","webpack:///./src/app/shared/components/header-top/header-top.component.html","webpack:///./src/app/shared/components/header-top/header-top.component.ts","webpack:///./src/app/shared/components/layouts/admin-layout/admin-layout.component.ts","webpack:///./src/app/shared/components/layouts/admin-layout/admin-layout.template.html","webpack:///./src/app/shared/components/layouts/advisor-layout/advisor-layout.component.ts","webpack:///./src/app/shared/components/layouts/advisor-layout/advisor-layout.template.html","webpack:///./src/app/shared/components/layouts/auth-layout/auth-layout.component.html","webpack:///./src/app/shared/components/layouts/auth-layout/auth-layout.component.ts","webpack:///./src/app/shared/components/layouts/customer-layout/customer-layout.component.ts","webpack:///./src/app/shared/components/layouts/customer-layout/customer-layout.template.html","webpack:///./src/app/shared/components/layouts/landing-layout/landing-layout.component.html","webpack:///./src/app/shared/components/layouts/landing-layout/landing-layout.component.ts","webpack:///./src/app/shared/components/notifications/notifications.component.html","webpack:///./src/app/shared/components/notifications/notifications.component.ts","webpack:///./src/app/shared/components/sidebar-side/sidebar-side.component.html","webpack:///./src/app/shared/components/sidebar-side/sidebar-side.component.ts","webpack:///./src/app/shared/components/sidebar-top/sidebar-top.component.html","webpack:///./src/app/shared/components/sidebar-top/sidebar-top.component.ts","webpack:///./src/app/shared/components/sidenav/sidenav.component.ts","webpack:///./src/app/shared/components/sidenav/sidenav.template.html","webpack:///./src/app/shared/directives/dropdown-anchor.directive.ts","webpack:///./src/app/shared/directives/dropdown-link.directive.ts","webpack:///./src/app/shared/directives/dropdown.directive.ts","webpack:///./src/app/shared/directives/egret-side-nav-toggle.directive.ts","webpack:///./src/app/shared/directives/font-size.directive.ts","webpack:///./src/app/shared/directives/scroll-to.directive.ts","webpack:///./src/app/shared/helpers/url.helper.ts","webpack:///./src/app/shared/inmemory-db/chat-db.ts","webpack:///./src/app/shared/inmemory-db/inmemory-db.service.ts","webpack:///./src/app/shared/pipes/excerpt.pipe.ts","webpack:///./src/app/shared/pipes/get-value-by-key.pipe.ts","webpack:///./src/app/shared/pipes/relative-time.pipe.ts","webpack:///./src/app/shared/services/advisor-nav-links.service.ts","webpack:///./src/app/shared/services/app-confirm/app-confirm.component.ts","webpack:///./src/app/shared/services/app-confirm/app-confirm.service.ts","webpack:///./src/app/shared/services/app-loader/app-loader.component.css","webpack:///./src/app/shared/services/app-loader/app-loader.component.html","webpack:///./src/app/shared/services/app-loader/app-loader.component.ts","webpack:///./src/app/shared/services/app-loader/app-loader.service.ts","webpack:///./src/app/shared/services/auth/auth.guard.ts","webpack:///./src/app/shared/services/customer-nav-links.service.ts","webpack:///./src/app/shared/services/layout.service.ts","webpack:///./src/app/shared/services/navigation.service.ts","webpack:///./src/app/shared/services/route-parts.service.ts","webpack:///./src/app/shared/services/theme.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./views/admin/admin.module\": [\n\t\t\"./src/app/views/admin/admin.module.ts\",\n\t\t\"default~views-admin-admin-module~views-advisor-advisor-module~views-customer-customer-module~views-l~f1bd1502\",\n\t\t\"views-admin-admin-module\"\n\t],\n\t\"./views/advisor/advisor.module\": [\n\t\t\"./src/app/views/advisor/advisor.module.ts\",\n\t\t\"default~views-admin-admin-module~views-advisor-advisor-module~views-customer-customer-module~views-l~f1bd1502\",\n\t\t\"views-advisor-advisor-module\"\n\t],\n\t\"./views/auth/auth.module\": [\n\t\t\"./src/app/views/auth/auth.module.ts\",\n\t\t\"views-auth-auth-module\"\n\t],\n\t\"./views/customer/customer.module\": [\n\t\t\"./src/app/views/customer/customer.module.ts\",\n\t\t\"default~views-admin-admin-module~views-advisor-advisor-module~views-customer-customer-module~views-l~f1bd1502\",\n\t\t\"views-customer-customer-module\"\n\t],\n\t\"./views/landing/landing.module\": [\n\t\t\"./src/app/views/landing/landing.module.ts\",\n\t\t\"default~views-admin-admin-module~views-advisor-advisor-module~views-customer-customer-module~views-l~f1bd1502\",\n\t\t\"views-landing-landing-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit, AfterViewInit, Renderer2 } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router, NavigationEnd, ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\nimport { RoutePartsService } from \"./shared/services/route-parts.service\";\r\nimport { ThemeService } from './shared/services/theme.service';\r\n\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, AfterViewInit {\r\n  appTitle = 'Egret';\r\n  pageTitle = '';\r\n\r\n  constructor(\r\n    public title: Title, \r\n    private router: Router, \r\n    private activeRoute: ActivatedRoute,\r\n    private routePartsService: RoutePartsService,\r\n    private themeService: ThemeService,\r\n    private renderer: Renderer2\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.changePageTitle();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.themeService.applyMatTheme(this.renderer)\r\n  }\r\n  changePageTitle() {\r\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((routeChange) => {\r\n      var routeParts = this.routePartsService.generateRouteParts(this.activeRoute.snapshot);\r\n      if (!routeParts.length)\r\n        return this.title.setTitle(this.appTitle);\r\n      // Extract title from parts;\r\n      this.pageTitle = routeParts\r\n                      .reverse()\r\n                      .map((part) => part.title )\r\n                      .reduce((partA, partI) => {return `${partA} > ${partI}`});\r\n      this.pageTitle += ` | ${this.appTitle}`;\r\n      this.title.setTitle(this.pageTitle);\r\n    });\r\n  }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BrowserModule, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { GestureConfig } from '@angular/material';\r\nimport { \r\n  PerfectScrollbarModule, \r\n  PERFECT_SCROLLBAR_CONFIG, \r\n  PerfectScrollbarConfigInterface\r\n} from 'ngx-perfect-scrollbar';\r\n\r\nimport { InMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { InMemoryDataService } from './shared/inmemory-db/inmemory-db.service';\r\n\r\nimport { rootRouterConfig } from './app.routing';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\n\r\n// AoT requires an exported function for factories\r\nexport function HttpLoaderFactory(httpClient: HttpClient) {\r\n  return new TranslateHttpLoader(httpClient);\r\n}\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true\r\n};\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    SharedModule,\r\n    HttpClientModule,\r\n    PerfectScrollbarModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    InMemoryWebApiModule.forRoot(InMemoryDataService, { passThruUnknownUrl: true }),\r\n    RouterModule.forRoot(rootRouterConfig, { useHash: false })\r\n  ],\r\n  declarations: [AppComponent],\r\n  providers: [\r\n    { provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig },\r\n    { provide: PERFECT_SCROLLBAR_CONFIG, useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Routes } from '@angular/router';\r\nimport { AdminLayoutComponent } from './shared/components/layouts/admin-layout/admin-layout.component';\r\nimport { AdvisorLayoutComponent } from './shared/components/layouts/advisor-layout/advisor-layout.component';\r\nimport { AuthLayoutComponent } from './shared/components/layouts/auth-layout/auth-layout.component';\r\nimport { CustomerLayoutComponent } from './shared/components/layouts/customer-layout/customer-layout.component';\r\nimport { LandingLayoutComponent } from './shared/components/layouts/landing-layout/landing-layout.component';\r\nimport { AuthGuard } from './shared/services/auth/auth.guard';\r\n\r\nexport const rootRouterConfig: Routes = [\r\n  {\r\n    path: '',\r\n    component: LandingLayoutComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        loadChildren: './views/landing/landing.module#LandingModule',\r\n        data: { title: 'Landing'}\r\n      }\r\n    ]\r\n  }, {\r\n    path: '',\r\n    component: AuthLayoutComponent,\r\n    children: [\r\n      {\r\n        path: 'auth',\r\n        loadChildren: './views/auth/auth.module#AuthModule',\r\n        data: { title: 'Authentication'}\r\n      }\r\n    ]\r\n  }, {\r\n    path: '',\r\n    component: AdminLayoutComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: 'admin',\r\n        loadChildren: './views/admin/admin.module#AdminModule',\r\n        data: { title: 'Others', breadcrumb: 'OTHERS'}\r\n      }\r\n    ]\r\n  }, {\r\n    path: 'customer',\r\n    component: CustomerLayoutComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        loadChildren: './views/customer/customer.module#CustomerModule',\r\n        data: { title: 'Customer'}\r\n      }\r\n    ]\r\n  }, {\r\n    path: '',\r\n    component: AdvisorLayoutComponent,\r\n    children: [\r\n      {\r\n        path: 'advisor',\r\n        loadChildren: './views/advisor/advisor.module#AdvisorModule',\r\n        data: { title: 'Customer'}\r\n      }\r\n    ]\r\n  }, {\r\n    path: '**',\r\n    redirectTo: 'auth/404'\r\n  }\r\n];\r\n\r\n","module.exports = \"<div class=\\\"header-topnav mat-elevation-z2\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"topnav\\\">\\r\\n      <!-- App Logo -->\\r\\n      <div class=\\\"topbar-branding\\\">\\r\\n        <img src=\\\"assets/images/logo.png\\\" alt=\\\"\\\" class=\\\"app-logo\\\">\\r\\n      </div>\\r\\n\\r\\n      <ul class=\\\"menu\\\" *ngIf=\\\"!layoutConf.isMobile\\\">\\r\\n        <li *ngFor=\\\"let item of menuItems; let i = index;\\\">\\r\\n          <div *ngIf=\\\"item.type !== 'separator'\\\" routerLinkActive=\\\"open\\\">\\r\\n            <a matRipple routerLink=\\\"/{{item.state}}\\\" *ngIf=\\\"item.type === 'link'\\\">\\r\\n              <mat-icon>{{item.icon}}</mat-icon>\\r\\n              {{item.name | translate}}\\r\\n            </a>\\r\\n\\r\\n      \\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <span fxFlex></span>\\r\\n      <!-- End Navigation -->\\r\\n\\r\\n      <!-- Language Switcher -->\\r\\n      <!-- <mat-select *ngIf=\\\"!layoutConf.isMobile\\\" placeholder=\\\"\\\" id=\\\"langToggle\\\" [style.width]=\\\"'auto'\\\" name=\\\"currentLang\\\" [(ngModel)]=\\\"currentLang\\\"\\r\\n        (selectionChange)=\\\"setLang()\\\" class=\\\"topbar-button-right\\\">\\r\\n        <mat-option *ngFor=\\\"let lang of availableLangs\\\" [value]=\\\"lang.code\\\" ngDefaultControl>{{ lang.name }}</mat-option>\\r\\n      </mat-select> -->\\r\\n      <!-- Theme Switcher -->\\r\\n      \\r\\n      <mat-menu #themeMenu=\\\"matMenu\\\">\\r\\n        <mat-grid-list class=\\\"theme-list\\\" cols=\\\"2\\\" rowHeight=\\\"48px\\\">\\r\\n          <mat-grid-tile *ngFor=\\\"let theme of egretThemes\\\" (click)=\\\"changeTheme(theme)\\\">\\r\\n            <div mat-menu-item [title]=\\\"theme.name\\\">\\r\\n              <div [style.background]=\\\"theme.baseColor\\\" class=\\\"egret-swatch\\\"></div>\\r\\n              <mat-icon class=\\\"active-icon\\\" *ngIf=\\\"theme.isActive\\\">check</mat-icon>\\r\\n            </div>\\r\\n          </mat-grid-tile>\\r\\n        </mat-grid-list>\\r\\n      </mat-menu>\\r\\n      <!-- Notification toggle button -->\\r\\n      <button mat-icon-button matTooltip=\\\"Notifications\\\" (click)=\\\"toggleNotific()\\\" [style.overflow]=\\\"'visible'\\\" class=\\\"topbar-button-right\\\">\\r\\n        <mat-icon>notifications</mat-icon>\\r\\n        <span class=\\\"notification-number mat-bg-warn\\\">3</span>\\r\\n      </button>\\r\\n      <!-- Top left user menu -->\\r\\n      <button mat-icon-button [matMenuTriggerFor]=\\\"accountMenu\\\" class=\\\"topbar-button-right mr-1 img-button\\\">\\r\\n        <img src=\\\"assets/images/face-7.jpg\\\" alt=\\\"\\\">\\r\\n      </button>\\r\\n      <mat-menu #accountMenu=\\\"matMenu\\\">\\r\\n        <button mat-menu-item [routerLink]=\\\"['/profile/overview']\\\">\\r\\n          <mat-icon>account_box</mat-icon>\\r\\n          <span>Customer Profile</span>\\r\\n        </button>\\r\\n        <button mat-menu-item [routerLink]=\\\"['/profile/settings']\\\">\\r\\n          <mat-icon>settings</mat-icon>\\r\\n          <span>Customer Account Settings</span>\\r\\n        </button>\\r\\n        <button mat-menu-item>\\r\\n          <mat-icon>notifications_off</mat-icon>\\r\\n          <span>Customer Disable alerts</span>\\r\\n        </button>\\r\\n        <button mat-menu-item [routerLink]=\\\"['/sessions/signin']\\\">\\r\\n          <mat-icon>exit_to_app</mat-icon>\\r\\n          <span>Customer Sign out</span>\\r\\n        </button>\\r\\n      </mat-menu>\\r\\n      <!-- Mobile screen menu toggle -->\\r\\n      <button mat-icon-button class=\\\"mr-1\\\" (click)=\\\"toggleSidenav()\\\" *ngIf=\\\"layoutConf.isMobile\\\">\\r\\n        <mat-icon>menu</mat-icon>\\r\\n      </button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { AdvisorNavService } from '../../../shared/services/advisor-nav-links.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ThemeService } from '../../../shared/services/theme.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LayoutService } from '../../services/layout.service';\r\n\r\n@Component({\r\n  selector: 'app-advisor-header-top',\r\n  templateUrl: './advisor-header-top.component.html'\r\n})\r\nexport class AdvisorHeaderTopComponent implements OnInit, OnDestroy {\r\n  layoutConf: any;\r\n  menuItems:any;\r\n  menuItemSub: Subscription;\r\n  egretThemes: any[] = [];\r\n  currentLang = 'en';\r\n  availableLangs = [{\r\n    name: 'English',\r\n    code: 'en',\r\n  }, {\r\n    name: 'Spanish',\r\n    code: 'es',\r\n  }]\r\n  @Input() notificPanel;\r\n  constructor(\r\n    private layout: LayoutService,\r\n    private navService: AdvisorNavService,\r\n    public themeService: ThemeService,\r\n    public translate: TranslateService,\r\n    private renderer: Renderer2\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.layoutConf = this.layout.layoutConf;\r\n    this.egretThemes = this.themeService.egretThemes;\r\n    this.menuItemSub = this.navService.menuItems$\r\n    .subscribe(res => {\r\n      res = res.filter(item => item.type !== 'icon' && item.type !== 'separator');\r\n      let limit = 4\r\n      let mainItems:any[] = res.slice(0, limit)\r\n      if(res.length <= limit) {\r\n        return this.menuItems = mainItems\r\n      }\r\n      let subItems:any[] = res.slice(limit, res.length - 1)\r\n      mainItems.push({\r\n        name: 'More',\r\n        type: 'dropDown',\r\n        tooltip: 'More',\r\n        icon: 'more_horiz',\r\n        sub: subItems\r\n      })\r\n      this.menuItems = mainItems\r\n    })\r\n  }\r\n  ngOnDestroy() {\r\n    this.menuItemSub.unsubscribe()\r\n  }\r\n  setLang() {\r\n    this.translate.use(this.currentLang)\r\n  }\r\n  changeTheme(theme) {\r\n    this.themeService.changeTheme(this.renderer, theme);\r\n  }\r\n  toggleNotific() {\r\n    this.notificPanel.toggle();\r\n  }\r\n  toggleSidenav() {\r\n    if(this.layoutConf.sidebarStyle === 'closed') {\r\n      return this.layout.publishLayoutChange({\r\n        sidebarStyle: 'full'\r\n      })\r\n    }\r\n    this.layout.publishLayoutChange({\r\n      sidebarStyle: 'closed'\r\n    })\r\n  }\r\n}\r\n","module.exports = \"<!-- <div class=\\\"breadcrumb-bar\\\" *ngIf=\\\"layout.layoutConf.useBreadcrumb && layout.layoutConf.breadcrumb === 'simple'\\\">\\r\\n  <ul class=\\\"breadcrumb\\\">\\r\\n    <li *ngFor=\\\"let part of routeParts\\\"><a routerLink=\\\"/{{part.url}}\\\">{{part.breadcrumb | translate}}</a></li>\\r\\n  </ul>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"breadcrumb-title\\\" *ngIf=\\\"layout.layoutConf.useBreadcrumb && layout.layoutConf.breadcrumb === 'title'\\\">\\r\\n  <h1 class=\\\"bc-title\\\">{{routeParts[routeParts.length -1]['breadcrumb'] | translate}}</h1>\\r\\n  <ul class=\\\"breadcrumb\\\" *ngIf=\\\"routeParts.length > 1\\\">\\r\\n    <li *ngFor=\\\"let part of routeParts\\\"><a routerLink=\\\"/{{part.url}}\\\" class=\\\"text-muted\\\">{{part.breadcrumb | translate}}</a></li>\\r\\n  </ul>\\r\\n</div> -->\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2JyZWFkY3J1bWIvYnJlYWRjcnVtYi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, NavigationEnd, ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { RoutePartsService } from '../../../shared/services/route-parts.service';\r\nimport { LayoutService } from '../../../shared/services/layout.service';\r\nimport { Subscription } from \"rxjs\";\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  styleUrls: ['./breadcrumb.component.scss']\r\n})\r\nexport class BreadcrumbComponent implements OnInit, OnDestroy {\r\n  routeParts:any[];\r\n  routerEventSub: Subscription;\r\n  // public isEnabled: boolean = true;\r\n  constructor(\r\n    private router: Router,\r\n    private routePartsService: RoutePartsService, \r\n    private activeRoute: ActivatedRoute,\r\n    public layout: LayoutService\r\n  ) {\r\n    this.routerEventSub = this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe((routeChange) => {\r\n        this.routeParts = this.routePartsService.generateRouteParts(this.activeRoute.snapshot);\r\n        // generate url from parts\r\n        this.routeParts.reverse().map((item, i) => {\r\n          item.breadcrumb = this.parseText(item);\r\n          item.urlSegments.forEach((urlSegment, j) => {\r\n            if(j === 0)\r\n              return item.url = `${urlSegment.path}`;\r\n            item.url += `/${urlSegment.path}`\r\n          });\r\n          if(i === 0) {\r\n            return item;\r\n          }\r\n          // prepend previous part to current part\r\n          item.url = `${this.routeParts[i - 1].url}/${item.url}`;\r\n          return item;\r\n        });\r\n      });\r\n  }\r\n\r\n  ngOnInit() {}\r\n  ngOnDestroy() {\r\n    if(this.routerEventSub) {\r\n      this.routerEventSub.unsubscribe()\r\n    }\r\n  }\r\n\r\n  parseText(part) {\r\n    part.breadcrumb = part.breadcrumb ? part.breadcrumb.replace(/{{([^{}]*)}}/g, function (a, b) {\r\n      var r = part.params[b];\r\n      return typeof r === 'string' ? r : a;\r\n    }) : ''\r\n    return part.breadcrumb;\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"header-topnav mat-elevation-z2\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"topnav\\\">\\r\\n      <!-- App Logo -->\\r\\n      <div class=\\\"topbar-branding\\\">\\r\\n        <img src=\\\"assets/images/logo.png\\\" alt=\\\"\\\" class=\\\"app-logo\\\">\\r\\n      </div>\\r\\n\\r\\n      <ul class=\\\"menu\\\" *ngIf=\\\"!layoutConf.isMobile\\\">\\r\\n        <li *ngFor=\\\"let item of menuItems; let i = index;\\\">\\r\\n          <div *ngIf=\\\"item.type !== 'separator'\\\" routerLinkActive=\\\"open\\\">\\r\\n            <a matRipple routerLink=\\\"/{{item.state}}\\\" *ngIf=\\\"item.type === 'link'\\\">\\r\\n              <mat-icon>{{item.icon}}</mat-icon>\\r\\n              {{item.name | translate}}\\r\\n            </a>\\r\\n\\r\\n      \\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <span fxFlex></span>\\r\\n      <!-- End Navigation -->\\r\\n\\r\\n      <!-- Language Switcher -->\\r\\n      <!-- <mat-select *ngIf=\\\"!layoutConf.isMobile\\\" placeholder=\\\"\\\" id=\\\"langToggle\\\" [style.width]=\\\"'auto'\\\" name=\\\"currentLang\\\" [(ngModel)]=\\\"currentLang\\\"\\r\\n        (selectionChange)=\\\"setLang()\\\" class=\\\"topbar-button-right\\\">\\r\\n        <mat-option *ngFor=\\\"let lang of availableLangs\\\" [value]=\\\"lang.code\\\" ngDefaultControl>{{ lang.name }}</mat-option>\\r\\n      </mat-select> -->\\r\\n      <!-- Theme Switcher -->\\r\\n      \\r\\n      <mat-menu #themeMenu=\\\"matMenu\\\">\\r\\n        <mat-grid-list class=\\\"theme-list\\\" cols=\\\"2\\\" rowHeight=\\\"48px\\\">\\r\\n          <mat-grid-tile *ngFor=\\\"let theme of egretThemes\\\" (click)=\\\"changeTheme(theme)\\\">\\r\\n            <div mat-menu-item [title]=\\\"theme.name\\\">\\r\\n              <div [style.background]=\\\"theme.baseColor\\\" class=\\\"egret-swatch\\\"></div>\\r\\n              <mat-icon class=\\\"active-icon\\\" *ngIf=\\\"theme.isActive\\\">check</mat-icon>\\r\\n            </div>\\r\\n          </mat-grid-tile>\\r\\n        </mat-grid-list>\\r\\n      </mat-menu>\\r\\n      <!-- Notification toggle button -->\\r\\n      <button mat-icon-button matTooltip=\\\"Notifications\\\" (click)=\\\"toggleNotific()\\\" [style.overflow]=\\\"'visible'\\\" class=\\\"topbar-button-right\\\">\\r\\n        <mat-icon>notifications</mat-icon>\\r\\n        <span class=\\\"notification-number mat-bg-warn\\\">3</span>\\r\\n      </button>\\r\\n      <!-- Top left user menu -->\\r\\n      <button mat-icon-button [matMenuTriggerFor]=\\\"accountMenu\\\" class=\\\"topbar-button-right mr-1 img-button\\\">\\r\\n        <img src=\\\"assets/images/face-7.jpg\\\" alt=\\\"\\\">\\r\\n      </button>\\r\\n      <mat-menu #accountMenu=\\\"matMenu\\\">\\r\\n        <button mat-menu-item [routerLink]=\\\"['/profile/overview']\\\">\\r\\n          <mat-icon>account_box</mat-icon>\\r\\n          <span>Customer Profile</span>\\r\\n        </button>\\r\\n        <button mat-menu-item [routerLink]=\\\"['/profile/settings']\\\">\\r\\n          <mat-icon>settings</mat-icon>\\r\\n          <span>Customer Account Settings</span>\\r\\n        </button>\\r\\n        <button mat-menu-item>\\r\\n          <mat-icon>notifications_off</mat-icon>\\r\\n          <span>Customer Disable alerts</span>\\r\\n        </button>\\r\\n        <button mat-menu-item [routerLink]=\\\"['/sessions/signin']\\\">\\r\\n          <mat-icon>exit_to_app</mat-icon>\\r\\n          <span>Customer Sign out</span>\\r\\n        </button>\\r\\n      </mat-menu>\\r\\n      <!-- Mobile screen menu toggle -->\\r\\n      <button mat-icon-button class=\\\"mr-1\\\" (click)=\\\"toggleSidenav()\\\" *ngIf=\\\"layoutConf.isMobile\\\">\\r\\n        <mat-icon>menu</mat-icon>\\r\\n      </button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { CustNavService } from '../../../shared/services/customer-nav-links.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ThemeService } from '../../../shared/services/theme.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LayoutService } from '../../services/layout.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-header-top',\r\n  templateUrl: './customer-header-top.component.html'\r\n})\r\nexport class customerHeaderTopComponent implements OnInit, OnDestroy {\r\n  layoutConf: any;\r\n  menuItems:any;\r\n  menuItemSub: Subscription;\r\n  egretThemes: any[] = [];\r\n  currentLang = 'en';\r\n  availableLangs = [{\r\n    name: 'English',\r\n    code: 'en',\r\n  }, {\r\n    name: 'Spanish',\r\n    code: 'es',\r\n  }]\r\n  @Input() notificPanel;\r\n  constructor(\r\n    private layout: LayoutService,\r\n    private navService: CustNavService,\r\n    public themeService: ThemeService,\r\n    public translate: TranslateService,\r\n    private renderer: Renderer2\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.layoutConf = this.layout.layoutConf;\r\n    this.egretThemes = this.themeService.egretThemes;\r\n    this.menuItemSub = this.navService.menuItems$\r\n    .subscribe(res => {\r\n      res = res.filter(item => item.type !== 'icon' && item.type !== 'separator');\r\n      let limit = 4\r\n      let mainItems:any[] = res.slice(0, limit)\r\n      if(res.length <= limit) {\r\n        return this.menuItems = mainItems\r\n      }\r\n      let subItems:any[] = res.slice(limit, res.length - 1)\r\n      mainItems.push({\r\n        name: 'More',\r\n        type: 'dropDown',\r\n        tooltip: 'More',\r\n        icon: 'more_horiz',\r\n        sub: subItems\r\n      })\r\n      this.menuItems = mainItems\r\n    })\r\n  }\r\n  ngOnDestroy() {\r\n    this.menuItemSub.unsubscribe()\r\n  }\r\n  setLang() {\r\n    this.translate.use(this.currentLang)\r\n  }\r\n  changeTheme(theme) {\r\n    this.themeService.changeTheme(this.renderer, theme);\r\n  }\r\n  toggleNotific() {\r\n    this.notificPanel.toggle();\r\n  }\r\n  toggleSidenav() {\r\n    if(this.layoutConf.sidebarStyle === 'closed') {\r\n      return this.layout.publishLayoutChange({\r\n        sidebarStyle: 'full'\r\n      })\r\n    }\r\n    this.layout.publishLayoutChange({\r\n      sidebarStyle: 'closed'\r\n    })\r\n  }\r\n}\r\n","module.exports = \"<div id=\\\"app-customizer\\\">\\r\\n  <div class=\\\"handle\\\" *ngIf=\\\"!isCustomizerOpen\\\">\\r\\n    <button \\r\\n    mat-fab\\r\\n    color=\\\"warn\\\" \\r\\n    (click)=\\\"isCustomizerOpen = true\\\">\\r\\n      <mat-icon>settings</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n  <mat-card class=\\\"p-0\\\" *ngIf=\\\"isCustomizerOpen\\\">\\r\\n    <mat-card-title class=\\\"mat-bg-warn\\\">\\r\\n      <div class=\\\"card-title-text\\\">\\r\\n        <span>Settings</span>\\r\\n        <span fxFlex></span>\\r\\n        <button \\r\\n        class=\\\"card-control\\\" \\r\\n        mat-icon-button\\r\\n        (click)=\\\"isCustomizerOpen = false\\\">\\r\\n          <mat-icon>close</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n    </mat-card-title>\\r\\n    <mat-card-content>\\r\\n      <div class=\\\"pb-1\\\">\\r\\n        <h5 class=\\\"mt-0\\\">Layouts</h5>\\r\\n        <mat-radio-group fxLayout=\\\"column\\\" [(ngModel)]=\\\"selectedLayout\\\" (change)=\\\"changeLayoutStyle($event)\\\">\\r\\n            <mat-radio-button [value]=\\\"'top'\\\"> Top Navigation </mat-radio-button>\\r\\n            <mat-radio-button [value]=\\\"'side'\\\"> Side Navigation </mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n      </div>\\r\\n      <div class=\\\"pb-1\\\">\\r\\n        <mat-checkbox [(ngModel)]=\\\"isTopbarFixed\\\" (change)=\\\"toggleTopbarFixed($event)\\\" [disabled]=\\\"selectedLayout === 'top'\\\" [value]=\\\"selectedLayout !== 'top'\\\">Fixed Topbar</mat-checkbox>\\r\\n      </div>\\r\\n      <div class=\\\"pb-1\\\">\\r\\n        <mat-checkbox [(ngModel)]=\\\"layoutConf.breadcrumb\\\" (change)=\\\"toggleBreadcrumb($event)\\\">Use breadcrumb</mat-checkbox>\\r\\n      </div>\\r\\n      <div class=\\\"pb-1\\\">\\r\\n          <h6 class=\\\"mt-0\\\">Breadcrumb Style</h6>\\r\\n          <mat-radio-group fxLayout=\\\"column\\\" [(ngModel)]=\\\"layoutConf.breadcrumb\\\">\\r\\n              <mat-radio-button [value]=\\\"'simple'\\\"> Simple </mat-radio-button>\\r\\n              <mat-radio-button [value]=\\\"'title'\\\"> Simple with title </mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n        </div>\\r\\n      <div class=\\\"pb-1 pos-rel\\\">\\r\\n        <h6 class=\\\"m-0 pb-1\\\">Choose a Navigation Style</h6>\\r\\n        <mat-radio-group \\r\\n        fxLayout=\\\"column\\\" \\r\\n        [(ngModel)]=\\\"selectedMenu\\\" \\r\\n        (change)=\\\"changeSidenav($event)\\\" \\r\\n        [disabled]=\\\"selectedLayout === 'top'\\\">\\r\\n          <mat-radio-button \\r\\n          *ngFor=\\\"let type of sidenavTypes\\\" \\r\\n          [value]=\\\"type.value\\\">\\r\\n            {{type.name}}\\r\\n          </mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n      </div>\\r\\n      <mat-divider></mat-divider>\\r\\n      \\r\\n      <div class=\\\"pb-1 pt-1\\\">\\r\\n        <mat-checkbox [(ngModel)]=\\\"isRTL\\\" (change)=\\\"toggleDir($event)\\\">RTL</mat-checkbox>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</div>\"","module.exports = \"#app-customizer {\\n  position: fixed;\\n  z-index: 100;\\n  bottom: 16px;\\n  right: 24px; }\\n  #app-customizer .handle {\\n    float: right; }\\n  #app-customizer .mat-card-content {\\n    padding: 1rem 1.5rem 2rem; }\\n  .pos-rel {\\n  position: relative;\\n  z-index: 99; }\\n  .pos-rel .olay {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    background: rgba(255, 255, 255, 0.5);\\n    z-index: 100; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvY3VzdG9taXplci9FOlxcRGluZXNoXFxHaXRodWJcXExlZ2FjeUxJZmVQbGFucy9zcmNcXGFwcFxcc2hhcmVkXFxjb21wb25lbnRzXFxjdXN0b21pemVyXFxjdXN0b21pemVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtFQUNmLFlBQVk7RUFDWixZQUFZO0VBQ1osV0FBVyxFQUFBO0VBSmI7SUFNSSxZQUFZLEVBQUE7RUFOaEI7SUFTSSx5QkFBeUIsRUFBQTtFQUc3QjtFQUNFLGtCQUFrQjtFQUNsQixXQUFXLEVBQUE7RUFGYjtJQUlJLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLG9DQUFtQztJQUNuQyxZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9jdXN0b21pemVyL2N1c3RvbWl6ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjYXBwLWN1c3RvbWl6ZXIge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICB6LWluZGV4OiAxMDA7XHJcbiAgYm90dG9tOiAxNnB4O1xyXG4gIHJpZ2h0OiAyNHB4O1xyXG4gIC5oYW5kbGUge1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gIH1cclxuICAubWF0LWNhcmQtY29udGVudCAge1xyXG4gICAgcGFkZGluZzogMXJlbSAxLjVyZW0gMnJlbTtcclxuICB9XHJcbn1cclxuLnBvcy1yZWwge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB6LWluZGV4OiA5OTtcclxuICAub2xheSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjUpO1xyXG4gICAgei1pbmRleDogMTAwO1xyXG4gIH1cclxufSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NavigationService } from \"../../../shared/services/navigation.service\";\r\nimport { LayoutService } from '../../../shared/services/layout.service';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\n@Component({\r\n  selector: 'app-customizer',\r\n  templateUrl: './customizer.component.html',\r\n  styleUrls: ['./customizer.component.scss']\r\n})\r\nexport class CustomizerComponent implements OnInit {\r\n  isCustomizerOpen: boolean = false;\r\n  sidenavTypes = [{\r\n    name: 'Default Menu',\r\n    value: 'default-menu'\r\n  }, {\r\n    name: 'Separator Menu',\r\n    value: 'separator-menu'\r\n  }, {\r\n    name: 'Icon Menu',\r\n    value: 'icon-menu'\r\n  }]\r\n  layoutConf;\r\n  selectedMenu: string = 'icon-menu';\r\n  selectedLayout: string;\r\n  isTopbarFixed = false;\r\n  isRTL = false;\r\n  constructor(\r\n    private navService: NavigationService,\r\n    private layout: LayoutService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.layoutConf = this.layout.layoutConf;\r\n    this.selectedLayout = this.layoutConf.navigationPos;\r\n    this.isTopbarFixed = this.layoutConf.topbarFixed;\r\n    this.isRTL = this.layoutConf.dir === 'rtl';\r\n  }\r\n  changeLayoutStyle(data) {\r\n    this.layout.publishLayoutChange({navigationPos: this.selectedLayout})\r\n  }\r\n  changeSidenav(data) {\r\n    this.navService.publishNavigationChange(data.value)\r\n  }\r\n  toggleBreadcrumb(data) {\r\n    this.layout.publishLayoutChange({breadcrumb: data.checked})\r\n  }\r\n  toggleTopbarFixed(data) {\r\n    this.layout.publishLayoutChange({topbarFixed: data.checked})\r\n  }\r\n  toggleDir(data) {\r\n    let dir = data.checked ? 'rtl' : 'ltr';\r\n    this.layout.publishLayoutChange({dir: dir})\r\n  }\r\n}","import { Component, OnInit, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\r\nimport { ThemeService } from '../../services/theme.service';\r\nimport { LayoutService } from '../../services/layout.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-header-side',\r\n  templateUrl: './header-side.template.html'\r\n})\r\nexport class HeaderSideComponent implements OnInit {\r\n  @Input() notificPanel;\r\n  currentLang = 'en';\r\n  public availableLangs = [{\r\n    name: 'English',\r\n    code: 'en',\r\n  }, {\r\n    name: 'Spanish',\r\n    code: 'es',\r\n  }]\r\n  public egretThemes;\r\n  public layoutConf:any;\r\n  constructor(\r\n    private themeService: ThemeService,\r\n    private layout: LayoutService,\r\n    public translate: TranslateService,\r\n    private renderer: Renderer2\r\n  ) {}\r\n  ngOnInit() {\r\n    this.egretThemes = this.themeService.egretThemes;\r\n    this.layoutConf = this.layout.layoutConf;\r\n    this.translate.use(this.currentLang);\r\n  }\r\n  setLang(e) {\r\n    console.log(e)\r\n    this.translate.use(this.currentLang);\r\n  }\r\n  changeTheme(theme) {\r\n    this.themeService.changeTheme(this.renderer, theme);\r\n  }\r\n  toggleNotific() {\r\n    this.notificPanel.toggle();\r\n  }\r\n  toggleSidenav() {\r\n    if(this.layoutConf.sidebarStyle === 'closed') {\r\n      return this.layout.publishLayoutChange({\r\n        sidebarStyle: 'full'\r\n      })\r\n    }\r\n    this.layout.publishLayoutChange({\r\n      sidebarStyle: 'closed'\r\n    })\r\n  }\r\n\r\n  toggleCollapse() {\r\n    // compact --> full\r\n    if(this.layoutConf.sidebarStyle === 'compact') {\r\n      return this.layout.publishLayoutChange({\r\n        sidebarStyle: 'full'\r\n      }, {transitionClass: true})\r\n    }\r\n\r\n    // * --> compact\r\n    this.layout.publishLayoutChange({\r\n      sidebarStyle: 'compact'\r\n    }, {transitionClass: true})\r\n\r\n  }\r\n}","module.exports = \"<mat-toolbar class=\\\"topbar topbar-white\\\">\\r\\n  <!-- Sidenav toggle button -->\\r\\n  <button \\r\\n  *ngIf=\\\"layoutConf.sidebarStyle !== 'compact'\\\"\\r\\n  mat-icon-button\\r\\n  id=\\\"sidenavToggle\\\" \\r\\n  (click)=\\\"toggleSidenav()\\\"\\r\\n  matTooltip=\\\"Toggle Hide/Open\\\">\\r\\n  <mat-icon>menu</mat-icon>\\r\\n  </button>\\r\\n  <!-- Sidenav toggle collapse -->\\r\\n  <button \\r\\n  *ngIf=\\\"layoutConf.sidebarStyle !== 'closed'\\\"\\r\\n  mat-icon-button\\r\\n  id=\\\"collapseToggle\\\"\\r\\n  fxHide.lt-md=\\\"true\\\" \\r\\n  (click)=\\\"toggleCollapse()\\\"\\r\\n  matTooltip=\\\"Toggle Collapse\\\"\\r\\n  class=\\\"toggle-collapsed\\\">\\r\\n  <mat-icon>chevron_left</mat-icon>\\r\\n  </button>\\r\\n  <!-- Search form -->\\r\\n  <div \\r\\n  fxFlex\\r\\n  fxHide.lt-sm=\\\"true\\\" \\r\\n  class=\\\"search-bar\\\">\\r\\n    <form class=\\\"top-search-form\\\">\\r\\n      <mat-icon role=\\\"img\\\">search</mat-icon>\\r\\n      <input autofocus=\\\"true\\\" placeholder=\\\"Search\\\" type=\\\"text\\\">\\r\\n    </form>\\r\\n  </div>\\r\\n  <span fxFlex></span>\\r\\n  <!-- Language Switcher -->\\r\\n  <mat-select \\r\\n  placeholder=\\\"\\\"\\r\\n  id=\\\"langToggle\\\"\\r\\n  [style.width]=\\\"'auto'\\\"\\r\\n  name=\\\"currentLang\\\"\\r\\n  [(ngModel)]=\\\"currentLang\\\" \\r\\n  (selectionChange)=\\\"setLang($event)\\\">\\r\\n    <mat-option \\r\\n    *ngFor=\\\"let lang of availableLangs\\\" \\r\\n    [value]=\\\"lang.code\\\" ngDefaultControl>{{ lang.name }}</mat-option>\\r\\n  </mat-select>\\r\\n  <!-- Theme Switcher -->\\r\\n  <button \\r\\n  mat-icon-button\\r\\n  id=\\\"schemeToggle\\\" \\r\\n  [style.overflow]=\\\"'visible'\\\"\\r\\n  matTooltip=\\\"Color Schemes\\\"\\r\\n  [matMenuTriggerFor]=\\\"themeMenu\\\"\\r\\n  class=\\\"topbar-button-right\\\">\\r\\n    <mat-icon>format_color_fill</mat-icon>\\r\\n  </button>\\r\\n  <mat-menu #themeMenu=\\\"matMenu\\\">\\r\\n    <mat-grid-list\\r\\n    class=\\\"theme-list\\\" \\r\\n    cols=\\\"2\\\" \\r\\n    rowHeight=\\\"48px\\\">\\r\\n      <mat-grid-tile \\r\\n      *ngFor=\\\"let theme of egretThemes\\\"\\r\\n      (click)=\\\"changeTheme(theme)\\\">\\r\\n        <div mat-menu-item [title]=\\\"theme.name\\\">\\r\\n          <div [style.background]=\\\"theme.baseColor\\\" class=\\\"egret-swatch\\\"></div>\\r\\n          <mat-icon class=\\\"active-icon\\\" *ngIf=\\\"theme.isActive\\\">check</mat-icon>\\r\\n        </div>\\r\\n      </mat-grid-tile>\\r\\n    </mat-grid-list>\\r\\n  </mat-menu>\\r\\n  <!-- Notification toggle button -->\\r\\n  <button \\r\\n  mat-icon-button\\r\\n  matTooltip=\\\"Notifications\\\" \\r\\n  (click)=\\\"toggleNotific()\\\"\\r\\n  [style.overflow]=\\\"'visible'\\\" \\r\\n  class=\\\"topbar-button-right\\\">\\r\\n    <mat-icon>notifications</mat-icon>\\r\\n    <span class=\\\"notification-number mat-bg-warn\\\">3</span>\\r\\n  </button>\\r\\n  <!-- Top left user menu -->\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"accountMenu\\\" class=\\\"topbar-button-right img-button\\\">\\r\\n    <img src=\\\"assets/images/face-7.jpg\\\" alt=\\\"\\\">\\r\\n  </button>\\r\\n  <mat-menu #accountMenu=\\\"matMenu\\\">\\r\\n    <button mat-menu-item [routerLink]=\\\"['/profile/overview']\\\">\\r\\n      <mat-icon>account_box</mat-icon>\\r\\n      <span>Profile</span>\\r\\n    </button>\\r\\n    <button mat-menu-item [routerLink]=\\\"['/profile/settings']\\\">\\r\\n      <mat-icon>settings</mat-icon>\\r\\n      <span>Account Settings</span>\\r\\n    </button>\\r\\n    <button mat-menu-item>\\r\\n      <mat-icon>notifications_off</mat-icon>\\r\\n      <span>Disable alerts</span>\\r\\n    </button>\\r\\n    <button mat-menu-item [routerLink]=\\\"['/sessions/signin']\\\">\\r\\n      <mat-icon>exit_to_app</mat-icon>\\r\\n      <span>Sign out</span>\\r\\n    </button>\\r\\n  </mat-menu>\\r\\n</mat-toolbar>\"","module.exports = \"<div class=\\\"header-topnav mat-elevation-z2\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"topnav\\\">\\r\\n      <!-- App Logo -->\\r\\n      <div class=\\\"topbar-branding\\\">\\r\\n        <img src=\\\"assets/images/logo.png\\\" alt=\\\"\\\" class=\\\"app-logo\\\">\\r\\n      </div>\\r\\n\\r\\n      <ul class=\\\"menu\\\" *ngIf=\\\"!layoutConf.isMobile\\\">\\r\\n        <li *ngFor=\\\"let item of menuItems; let i = index;\\\">\\r\\n          <div *ngIf=\\\"item.type !== 'separator'\\\" routerLinkActive=\\\"open\\\">\\r\\n            <a matRipple routerLink=\\\"/{{item.state}}\\\" *ngIf=\\\"item.type === 'link'\\\">\\r\\n              <mat-icon>{{item.icon}}</mat-icon> \\r\\n              {{item.name | translate}}\\r\\n            </a>\\r\\n            <div *ngIf=\\\"item.type === 'dropDown'\\\">\\r\\n              <label matRipple for=\\\"drop-{{i}}\\\" class=\\\"toggle\\\"><mat-icon>{{item.icon}}</mat-icon> {{item.name | translate}}</label>\\r\\n              <a matRipple><mat-icon>{{item.icon}}</mat-icon> {{item.name | translate}}</a>\\r\\n              <input type=\\\"checkbox\\\" id=\\\"drop-{{i}}\\\" />\\r\\n              <ul>\\r\\n                <li *ngFor=\\\"let itemLvL2 of item.sub; let j = index;\\\" routerLinkActive=\\\"open\\\">\\r\\n                  <a matRipple routerLink=\\\"{{item.state ? '/'+item.state : ''}}/{{itemLvL2.state}}\\\" \\r\\n                  *ngIf=\\\"itemLvL2.type !== 'dropDown'\\\">\\r\\n                    <mat-icon *ngIf=\\\"itemLvL2.icon\\\">{{itemLvL2.icon}}</mat-icon>  \\r\\n                    {{itemLvL2.name | translate}}\\r\\n                  </a>\\r\\n                  \\r\\n                  <div *ngIf=\\\"itemLvL2.type === 'dropDown'\\\">\\r\\n                    <label matRipple for=\\\"drop-{{i}}{{j}}\\\" class=\\\"toggle\\\">{{itemLvL2.name | translate}}</label>\\r\\n                    <a matRipple><mat-icon *ngIf=\\\"itemLvL2.icon\\\">{{itemLvL2.icon}}</mat-icon>  {{itemLvL2.name | translate}}</a>\\r\\n                    <input type=\\\"checkbox\\\" id=\\\"drop-{{i}}{{j}}\\\" />\\r\\n                    <!-- Level 3 -->\\r\\n                    <ul>\\r\\n                      <li *ngFor=\\\"let itemLvL3 of itemLvL2.sub\\\" routerLinkActive=\\\"open\\\">\\r\\n                        <a matRipple routerLink=\\\"{{item.state ? '/'+item.state : ''}}{{itemLvL2.state ? '/'+itemLvL2.state : ''}}/{{itemLvL3.state}}\\\">\\r\\n                          <mat-icon *ngIf=\\\"itemLvL3.icon\\\">{{itemLvL3.icon}}</mat-icon>\\r\\n                          {{itemLvL3.name | translate}}\\r\\n                        </a>\\r\\n                      </li>\\r\\n                    </ul>\\r\\n                  </div>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </div>\\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <span fxFlex></span>\\r\\n      <!-- End Navigation -->\\r\\n      \\r\\n      <!-- Language Switcher -->\\r\\n      <mat-select \\r\\n      *ngIf=\\\"!layoutConf.isMobile\\\"\\r\\n      placeholder=\\\"\\\"\\r\\n      id=\\\"langToggle\\\"\\r\\n      [style.width]=\\\"'auto'\\\"\\r\\n      name=\\\"currentLang\\\"\\r\\n      [(ngModel)]=\\\"currentLang\\\" \\r\\n      (selectionChange)=\\\"setLang()\\\"\\r\\n      class=\\\"topbar-button-right\\\">\\r\\n        <mat-option \\r\\n        *ngFor=\\\"let lang of availableLangs\\\" \\r\\n        [value]=\\\"lang.code\\\" ngDefaultControl>{{ lang.name }}</mat-option>\\r\\n      </mat-select>\\r\\n      <!-- Theme Switcher -->\\r\\n      <button \\r\\n      mat-icon-button\\r\\n      id=\\\"schemeToggle\\\" \\r\\n      [style.overflow]=\\\"'visible'\\\"\\r\\n      matTooltip=\\\"Color Schemes\\\"\\r\\n      [matMenuTriggerFor]=\\\"themeMenu\\\"\\r\\n      class=\\\"topbar-button-right\\\">\\r\\n        <mat-icon>format_color_fill</mat-icon>\\r\\n      </button>\\r\\n      <mat-menu #themeMenu=\\\"matMenu\\\">\\r\\n        <mat-grid-list\\r\\n        class=\\\"theme-list\\\" \\r\\n        cols=\\\"2\\\" \\r\\n        rowHeight=\\\"48px\\\">\\r\\n          <mat-grid-tile \\r\\n          *ngFor=\\\"let theme of egretThemes\\\"\\r\\n          (click)=\\\"changeTheme(theme)\\\">\\r\\n            <div mat-menu-item [title]=\\\"theme.name\\\">\\r\\n              <div [style.background]=\\\"theme.baseColor\\\" class=\\\"egret-swatch\\\"></div>\\r\\n              <mat-icon class=\\\"active-icon\\\" *ngIf=\\\"theme.isActive\\\">check</mat-icon>\\r\\n            </div>\\r\\n          </mat-grid-tile>\\r\\n        </mat-grid-list>\\r\\n      </mat-menu>\\r\\n      <!-- Notification toggle button -->\\r\\n      <button \\r\\n      mat-icon-button\\r\\n      matTooltip=\\\"Notifications\\\" \\r\\n      (click)=\\\"toggleNotific()\\\"\\r\\n      [style.overflow]=\\\"'visible'\\\" \\r\\n      class=\\\"topbar-button-right\\\">\\r\\n        <mat-icon>notifications</mat-icon>\\r\\n        <span class=\\\"notification-number mat-bg-warn\\\">3</span>\\r\\n      </button>\\r\\n      <!-- Top left user menu -->\\r\\n      <button mat-icon-button [matMenuTriggerFor]=\\\"accountMenu\\\" class=\\\"topbar-button-right mr-1 img-button\\\">\\r\\n        <img src=\\\"assets/images/face-7.jpg\\\" alt=\\\"\\\">\\r\\n      </button>\\r\\n      <mat-menu #accountMenu=\\\"matMenu\\\">\\r\\n        <button mat-menu-item [routerLink]=\\\"['/profile/overview']\\\">\\r\\n          <mat-icon>account_box</mat-icon>\\r\\n          <span>Profile</span>\\r\\n        </button>\\r\\n        <button mat-menu-item [routerLink]=\\\"['/profile/settings']\\\">\\r\\n          <mat-icon>settings</mat-icon>\\r\\n          <span>Account Settings</span>\\r\\n        </button>\\r\\n        <button mat-menu-item>\\r\\n          <mat-icon>notifications_off</mat-icon>\\r\\n          <span>Disable alerts</span>\\r\\n        </button>\\r\\n        <button mat-menu-item [routerLink]=\\\"['/sessions/signin']\\\">\\r\\n          <mat-icon>exit_to_app</mat-icon>\\r\\n          <span>Sign out</span>\\r\\n        </button>\\r\\n      </mat-menu>\\r\\n      <!-- Mobile screen menu toggle -->\\r\\n      <button \\r\\n      mat-icon-button \\r\\n      class=\\\"mr-1\\\" \\r\\n      (click)=\\\"toggleSidenav()\\\" \\r\\n      *ngIf=\\\"layoutConf.isMobile\\\">\\r\\n        <mat-icon>menu</mat-icon>\\r\\n      </button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { NavigationService } from '../../../shared/services/navigation.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ThemeService } from '../../../shared/services/theme.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LayoutService } from '../../services/layout.service';\r\n\r\n@Component({\r\n  selector: 'app-header-top',\r\n  templateUrl: './header-top.component.html'\r\n})\r\nexport class HeaderTopComponent implements OnInit, OnDestroy {\r\n  layoutConf: any;\r\n  menuItems:any;\r\n  menuItemSub: Subscription;\r\n  egretThemes: any[] = [];\r\n  currentLang = 'en';\r\n  availableLangs = [{\r\n    name: 'English',\r\n    code: 'en',\r\n  }, {\r\n    name: 'Spanish',\r\n    code: 'es',\r\n  }]\r\n  @Input() notificPanel;\r\n  constructor(\r\n    private layout: LayoutService,\r\n    private navService: NavigationService,\r\n    public themeService: ThemeService,\r\n    public translate: TranslateService,\r\n    private renderer: Renderer2\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.layoutConf = this.layout.layoutConf;\r\n    this.egretThemes = this.themeService.egretThemes;\r\n    this.menuItemSub = this.navService.menuItems$\r\n    .subscribe(res => {\r\n      res = res.filter(item => item.type !== 'icon' && item.type !== 'separator');\r\n      let limit = 4\r\n      let mainItems:any[] = res.slice(0, limit)\r\n      if(res.length <= limit) {\r\n        return this.menuItems = mainItems\r\n      }\r\n      let subItems:any[] = res.slice(limit, res.length - 1)\r\n      mainItems.push({\r\n        name: 'More',\r\n        type: 'dropDown',\r\n        tooltip: 'More',\r\n        icon: 'more_horiz',\r\n        sub: subItems\r\n      })\r\n      this.menuItems = mainItems\r\n    })\r\n  }\r\n  ngOnDestroy() {\r\n    this.menuItemSub.unsubscribe()\r\n  }\r\n  setLang() {\r\n    this.translate.use(this.currentLang)\r\n  }\r\n  changeTheme(theme) {\r\n    this.themeService.changeTheme(this.renderer, theme);\r\n  }\r\n  toggleNotific() {\r\n    this.notificPanel.toggle();\r\n  }\r\n  toggleSidenav() {\r\n    if(this.layoutConf.sidebarStyle === 'closed') {\r\n      return this.layout.publishLayoutChange({\r\n        sidebarStyle: 'full'\r\n      })\r\n    }\r\n    this.layout.publishLayoutChange({\r\n      sidebarStyle: 'closed'\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, AfterViewInit, ViewChild, HostListener } from '@angular/core';\r\nimport { \r\n  Router, \r\n  NavigationEnd, \r\n  RouteConfigLoadStart, \r\n  RouteConfigLoadEnd, \r\n  ResolveStart, \r\n  ResolveEnd \r\n} from '@angular/router';\r\nimport { Subscription } from \"rxjs\";\r\nimport { MatSidenav } from '@angular/material';\r\nimport { MediaChange, ObservableMedia } from \"@angular/flex-layout\";\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ThemeService } from '../../../services/theme.service';\r\n// import PerfectScrollbar from 'perfect-scrollbar';\r\nimport { LayoutService } from '../../../services/layout.service';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-admin-layout',\r\n  templateUrl: './admin-layout.template.html'\r\n})\r\nexport class AdminLayoutComponent implements OnInit, AfterViewInit {\r\n  public isModuleLoading: Boolean = false;\r\n  private moduleLoaderSub: Subscription;\r\n  private layoutConfSub: Subscription;\r\n  private routerEventSub: Subscription;\r\n  private mediaSub: Subscription;\r\n  // private sidebarPS: PerfectScrollbar;\r\n\r\n  // private bodyPS: PerfectScrollbar;\r\n  // private headerFixedBodyPS: PerfectScrollbar;\r\n  public  scrollConfig = {}\r\n  public layoutConf: any = {};\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public translate: TranslateService,\r\n    public themeService: ThemeService,\r\n    private layout: LayoutService,\r\n    private media: ObservableMedia\r\n  ) {\r\n    // Close sidenav after route change in mobile\r\n    this.routerEventSub = router.events.pipe(filter(event => event instanceof NavigationEnd))\r\n    .subscribe((routeChange: NavigationEnd) => {\r\n      this.layout.adjustLayout({ route: routeChange.url });\r\n    });\r\n\r\n    // Translator init\r\n    const browserLang: string = translate.getBrowserLang();\r\n    translate.use(browserLang.match(/en|fr/) ? browserLang : 'en');\r\n  }\r\n  ngOnInit() {\r\n    this.layoutConf = this.layout.layoutConf;\r\n    // this.layout.adjustLayout();\r\n    // console.log(this.layoutConf)\r\n    this.layoutConf.navigationPos = 'side'\r\n\r\n    // FOR MODULE LOADER FLAG\r\n    this.moduleLoaderSub = this.router.events.subscribe(event => {\r\n      if(event instanceof RouteConfigLoadStart || event instanceof ResolveStart) {\r\n        this.isModuleLoading = true;\r\n      }\r\n      if(event instanceof RouteConfigLoadEnd || event instanceof ResolveEnd) {\r\n        this.isModuleLoading = false;\r\n      }\r\n    });\r\n  }\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.layout.adjustLayout(event);\r\n  }\r\n  \r\n  ngAfterViewInit() {\r\n    // this.layoutConfSub = this.layout.layoutConf$.subscribe(change => {\r\n    //   // this.initBodyPS(change)\r\n    // })\r\n  }\r\n  \r\n  // initBodyPS(layoutConf:any = {}) {\r\n  //   if(layoutConf.navigationPos === 'side' && layoutConf.topbarFixed) {\r\n  //     if (this.bodyPS) this.bodyPS.destroy();\r\n  //     if (this.headerFixedBodyPS) this.headerFixedBodyPS.destroy();\r\n  //     this.headerFixedBodyPS = new PerfectScrollbar('.rightside-content-hold', {\r\n  //       suppressScrollX: true\r\n  //     });\r\n  //     this.scrollToTop('.rightside-content-hold');\r\n  //   } else {\r\n  //     if (this.bodyPS) this.bodyPS.destroy();\r\n  //     if (this.headerFixedBodyPS) this.headerFixedBodyPS.destroy();\r\n  //     this.bodyPS = new PerfectScrollbar('.main-content-wrap', {\r\n  //       suppressScrollX: true\r\n  //     });\r\n  //     this.scrollToTop('.main-content-wrap');\r\n  //   }\r\n  // }\r\n  scrollToTop(selector: string) {\r\n    if(document) {\r\n      let element = <HTMLElement>document.querySelector(selector);\r\n      element.scrollTop = 0;\r\n    }\r\n  }\r\n  ngOnDestroy() {\r\n    if(this.moduleLoaderSub) {\r\n      this.moduleLoaderSub.unsubscribe()\r\n    }\r\n    if(this.layoutConfSub) {\r\n      this.layoutConfSub.unsubscribe()\r\n    }\r\n    if(this.routerEventSub) {\r\n      this.routerEventSub.unsubscribe()\r\n    }\r\n  }\r\n  closeSidebar() {\r\n    this.layout.publishLayoutChange({\r\n      sidebarStyle: 'closed'\r\n    })\r\n  }\r\n  \r\n}","module.exports = \"<div class=\\\"app-admin-wrap\\\" [dir]='layoutConf.dir'>\\r\\n  <!-- Header for top navigation layout -->\\r\\n  <!-- ONLY REQUIRED FOR **TOP** NAVIGATION LAYOUT -->\\r\\n  <app-header-top \\r\\n    *ngIf=\\\"layoutConf.navigationPos === 'top'\\\" \\r\\n    [notificPanel]=\\\"notificationPanel\\\">\\r\\n  </app-header-top>\\r\\n  <!-- Main Container -->\\r\\n  <mat-sidenav-container \\r\\n  [dir]='layoutConf.dir'\\r\\n  class=\\\"app-admin-container app-side-nav-container mat-drawer-transition\\\"\\r\\n  [ngClass]=\\\"{\\r\\n    'navigation-top': layoutConf.navigationPos === 'top',\\r\\n    'sidebar-full': layoutConf.sidebarStyle === 'full',\\r\\n    'sidebar-compact': layoutConf.sidebarStyle === 'compact' && layoutConf.navigationPos === 'side',\\r\\n    'sidebar-compact-big': layoutConf.sidebarStyle === 'compact-big' && layoutConf.navigationPos === 'side',\\r\\n    'layout-intransition': layoutConf.layoutInTransition,\\r\\n    'sidebar-opened': layoutConf.sidebarStyle !== 'closed' && layoutConf.navigationPos === 'side',\\r\\n    'sidebar-closed': layoutConf.sidebarStyle === 'closed',\\r\\n    'fixed-topbar': layoutConf.topbarFixed && layoutConf.navigationPos === 'side'\\r\\n  }\\\">\\r\\n  <!-- SIDEBAR -->\\r\\n  <!-- ONLY REQUIRED FOR **SIDE** NAVIGATION LAYOUT -->\\r\\n  <app-sidebar-side *ngIf=\\\"layoutConf.navigationPos === 'side'\\\"></app-sidebar-side>\\r\\n  \\r\\n  <!-- Top navigation layout (navigation for mobile screen) -->\\r\\n  <!-- ONLY REQUIRED FOR **TOP** NAVIGATION MOBILE LAYOUT -->\\r\\n  <app-sidebar-top *ngIf=\\\"layoutConf.navigationPos === 'top' && layoutConf.isMobile\\\"></app-sidebar-top>\\r\\n\\r\\n    <!-- App content -->\\r\\n    <div class=\\\"main-content-wrap\\\" [perfectScrollbar]=\\\"scrollConfig\\\" [disabled]=\\\"layoutConf.topbarFixed\\\">\\r\\n      <!-- Header for side navigation layout -->\\r\\n      <!-- ONLY REQUIRED FOR **SIDE** NAVIGATION LAYOUT -->\\r\\n      <app-header-side \\r\\n        *ngIf=\\\"layoutConf.navigationPos === 'side'\\\"\\r\\n        [notificPanel]=\\\"notificationPanel\\\">\\r\\n      </app-header-side>\\r\\n\\r\\n      <div class=\\\"rightside-content-hold\\\" [perfectScrollbar]=\\\"scrollConfig\\\" [disabled]=\\\"!layoutConf.topbarFixed\\\">\\r\\n        <!-- View Loader -->\\r\\n        <div class=\\\"view-loader\\\" *ngIf=\\\"isModuleLoading\\\">\\r\\n          <div class=\\\"spinner\\\">\\r\\n            <div class=\\\"double-bounce1 mat-bg-accent\\\"></div>\\r\\n            <div class=\\\"double-bounce2 mat-bg-primary\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Breadcrumb -->\\r\\n        <app-breadcrumb></app-breadcrumb>\\r\\n        <!-- View outlet -->\\r\\n        <router-outlet></router-outlet>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- View overlay for mobile navigation -->\\r\\n    <div class=\\\"sidebar-backdrop\\\"\\r\\n    [ngClass]=\\\"{'visible': layoutConf.sidebarStyle !== 'closed' && layoutConf.isMobile}\\\"\\r\\n    (click)=\\\"closeSidebar()\\\"></div>\\r\\n    \\r\\n    <!-- Notificaation bar -->\\r\\n    <mat-sidenav #notificationPanel mode=\\\"over\\\" class=\\\"\\\" position=\\\"end\\\">\\r\\n      <div class=\\\"navigation-hold\\\" fxLayout=\\\"column\\\">\\r\\n        <app-notifications [notificPanel]=\\\"notificationPanel\\\"></app-notifications>\\r\\n      </div>\\r\\n    </mat-sidenav>\\r\\n  </mat-sidenav-container>\\r\\n</div>\"","import { Component, OnInit, AfterViewInit, ViewChild, HostListener } from '@angular/core';\r\nimport { \r\n  Router, \r\n  NavigationEnd, \r\n  RouteConfigLoadStart, \r\n  RouteConfigLoadEnd, \r\n  ResolveStart, \r\n  ResolveEnd \r\n} from '@angular/router';\r\nimport { Subscription } from \"rxjs\";\r\nimport { MatSidenav } from '@angular/material';\r\nimport { MediaChange, ObservableMedia } from \"@angular/flex-layout\";\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ThemeService } from '../../../services/theme.service';\r\n// import PerfectScrollbar from 'perfect-scrollbar';\r\nimport { LayoutService } from '../../../services/layout.service';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-advisor-layout',\r\n  templateUrl: './advisor-layout.template.html'\r\n})\r\nexport class AdvisorLayoutComponent implements OnInit, AfterViewInit {\r\n  public isModuleLoading: Boolean = false;\r\n  private moduleLoaderSub: Subscription;\r\n  private layoutConfSub: Subscription;\r\n  private routerEventSub: Subscription;\r\n  private mediaSub: Subscription;\r\n  // private sidebarPS: PerfectScrollbar;\r\n\r\n  // private bodyPS: PerfectScrollbar;\r\n  // private headerFixedBodyPS: PerfectScrollbar;\r\n  public  scrollConfig = {}\r\n  public layoutConf: any = {};\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public translate: TranslateService,\r\n    public themeService: ThemeService,\r\n    private layout: LayoutService,\r\n    private media: ObservableMedia\r\n  ) {\r\n    // Close sidenav after route change in mobile\r\n    this.routerEventSub = router.events.pipe(filter(event => event instanceof NavigationEnd))\r\n    .subscribe((routeChange: NavigationEnd) => {\r\n      this.layout.adjustLayout({ route: routeChange.url });\r\n    });\r\n\r\n    // Translator init\r\n    const browserLang: string = translate.getBrowserLang();\r\n    translate.use(browserLang.match(/en|fr/) ? browserLang : 'en');\r\n  }\r\n  ngOnInit() {\r\n    this.layoutConf = this.layout.layoutConf;\r\n    // this.layout.adjustLayout();\r\n    // console.log(this.layoutConf)\r\n\r\n    // FOR MODULE LOADER FLAG\r\n    this.moduleLoaderSub = this.router.events.subscribe(event => {\r\n      if(event instanceof RouteConfigLoadStart || event instanceof ResolveStart) {\r\n        this.isModuleLoading = true;\r\n      }\r\n      if(event instanceof RouteConfigLoadEnd || event instanceof ResolveEnd) {\r\n        this.isModuleLoading = false;\r\n      }\r\n    });\r\n  }\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.layout.adjustLayout(event);\r\n  }\r\n  \r\n  ngAfterViewInit() {\r\n    // this.layoutConfSub = this.layout.layoutConf$.subscribe(change => {\r\n    //   // this.initBodyPS(change)\r\n    // })\r\n  }\r\n  \r\n  // initBodyPS(layoutConf:any = {}) {\r\n  //   if(layoutConf.navigationPos === 'side' && layoutConf.topbarFixed) {\r\n  //     if (this.bodyPS) this.bodyPS.destroy();\r\n  //     if (this.headerFixedBodyPS) this.headerFixedBodyPS.destroy();\r\n  //     this.headerFixedBodyPS = new PerfectScrollbar('.rightside-content-hold', {\r\n  //       suppressScrollX: true\r\n  //     });\r\n  //     this.scrollToTop('.rightside-content-hold');\r\n  //   } else {\r\n  //     if (this.bodyPS) this.bodyPS.destroy();\r\n  //     if (this.headerFixedBodyPS) this.headerFixedBodyPS.destroy();\r\n  //     this.bodyPS = new PerfectScrollbar('.main-content-wrap', {\r\n  //       suppressScrollX: true\r\n  //     });\r\n  //     this.scrollToTop('.main-content-wrap');\r\n  //   }\r\n  // }\r\n  scrollToTop(selector: string) {\r\n    if(document) {\r\n      let element = <HTMLElement>document.querySelector(selector);\r\n      element.scrollTop = 0;\r\n    }\r\n  }\r\n  ngOnDestroy() {\r\n    if(this.moduleLoaderSub) {\r\n      this.moduleLoaderSub.unsubscribe()\r\n    }\r\n    if(this.layoutConfSub) {\r\n      this.layoutConfSub.unsubscribe()\r\n    }\r\n    if(this.routerEventSub) {\r\n      this.routerEventSub.unsubscribe()\r\n    }\r\n  }\r\n  closeSidebar() {\r\n    this.layout.publishLayoutChange({\r\n      sidebarStyle: 'closed'\r\n    })\r\n  }\r\n  \r\n}","module.exports = \"<div class=\\\"app-admin-wrap\\\" [dir]='layoutConf.dir'>\\r\\n  <!-- Header for top navigation layout -->\\r\\n  <!-- ONLY REQUIRED FOR **TOP** NAVIGATION LAYOUT -->\\r\\n  <app-advisor-header-top \\r\\n    *ngIf=\\\"layoutConf.navigationPos === 'top'\\\" \\r\\n    [notificPanel]=\\\"notificationPanel\\\">\\r\\n  </app-advisor-header-top>\\r\\n  <!-- Main Container -->\\r\\n  <mat-sidenav-container \\r\\n  [dir]='layoutConf.dir'\\r\\n  class=\\\"app-admin-container app-side-nav-container mat-drawer-transition\\\"\\r\\n  [ngClass]=\\\"{\\r\\n    'navigation-top': layoutConf.navigationPos === 'top',\\r\\n    'sidebar-full': layoutConf.sidebarStyle === 'full',\\r\\n    'sidebar-compact': layoutConf.sidebarStyle === 'compact' && layoutConf.navigationPos === 'side',\\r\\n    'sidebar-compact-big': layoutConf.sidebarStyle === 'compact-big' && layoutConf.navigationPos === 'side',\\r\\n    'layout-intransition': layoutConf.layoutInTransition,\\r\\n    'sidebar-opened': layoutConf.sidebarStyle !== 'closed' && layoutConf.navigationPos === 'side',\\r\\n    'sidebar-closed': layoutConf.sidebarStyle === 'closed',\\r\\n    'fixed-topbar': layoutConf.topbarFixed && layoutConf.navigationPos === 'side'\\r\\n  }\\\">\\r\\n  <!-- SIDEBAR -->\\r\\n  <!-- ONLY REQUIRED FOR **SIDE** NAVIGATION LAYOUT -->\\r\\n  <app-sidebar-side *ngIf=\\\"layoutConf.navigationPos === 'side'\\\"></app-sidebar-side>\\r\\n  \\r\\n  <!-- Top navigation layout (navigation for mobile screen) -->\\r\\n  <!-- ONLY REQUIRED FOR **TOP** NAVIGATION MOBILE LAYOUT -->\\r\\n  <app-sidebar-top *ngIf=\\\"layoutConf.navigationPos === 'top' && layoutConf.isMobile\\\"></app-sidebar-top>\\r\\n\\r\\n    <!-- App content -->\\r\\n    <div class=\\\"main-content-wrap\\\" [perfectScrollbar]=\\\"scrollConfig\\\" [disabled]=\\\"layoutConf.topbarFixed\\\">\\r\\n      <!-- Header for side navigation layout -->\\r\\n      <!-- ONLY REQUIRED FOR **SIDE** NAVIGATION LAYOUT -->\\r\\n      <app-header-side \\r\\n        *ngIf=\\\"layoutConf.navigationPos === 'side'\\\"\\r\\n        [notificPanel]=\\\"notificationPanel\\\">\\r\\n      </app-header-side>\\r\\n\\r\\n      <div class=\\\"rightside-content-hold\\\" [perfectScrollbar]=\\\"scrollConfig\\\" [disabled]=\\\"!layoutConf.topbarFixed\\\">\\r\\n        <!-- View Loader -->\\r\\n        <div class=\\\"view-loader\\\" *ngIf=\\\"isModuleLoading\\\">\\r\\n          <div class=\\\"spinner\\\">\\r\\n            <div class=\\\"double-bounce1 mat-bg-accent\\\"></div>\\r\\n            <div class=\\\"double-bounce2 mat-bg-primary\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Breadcrumb -->\\r\\n        <app-breadcrumb></app-breadcrumb>\\r\\n        <!-- View outlet -->\\r\\n        <router-outlet></router-outlet>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- View overlay for mobile navigation -->\\r\\n    <div class=\\\"sidebar-backdrop\\\"\\r\\n    [ngClass]=\\\"{'visible': layoutConf.sidebarStyle !== 'closed' && layoutConf.isMobile}\\\"\\r\\n    (click)=\\\"closeSidebar()\\\"></div>\\r\\n    \\r\\n    <!-- Notificaation bar -->\\r\\n    <mat-sidenav #notificationPanel mode=\\\"over\\\" class=\\\"\\\" position=\\\"end\\\">\\r\\n      <div class=\\\"navigation-hold\\\" fxLayout=\\\"column\\\">\\r\\n        <app-notifications [notificPanel]=\\\"notificationPanel\\\"></app-notifications>\\r\\n      </div>\\r\\n    </mat-sidenav>\\r\\n  </mat-sidenav-container>\\r\\n</div>\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth-layout',\r\n  templateUrl: './auth-layout.component.html'\r\n})\r\nexport class AuthLayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    const locationArray = location.href.split(\"/\")\r\n    if(locationArray.indexOf(\"auth\") > -1) {\r\n      const htmlTag = document.getElementsByTagName(\"html\")[0]\r\n      const bodyTag = document.getElementsByTagName(\"body\")[0]\r\n      htmlTag.className += \" llp--auth--wrapper\"\r\n      bodyTag.className += \" llp--auth--wrapper\"\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const locationArray = location.href.split(\"/\")\r\n    if(locationArray.indexOf(\"auth\") > -1) {\r\n      //html\r\n      const htmlTag = document.getElementsByTagName(\"html\")[0]\r\n      let htmlClasses = htmlTag.className && htmlTag.className.length > 0 ? htmlTag.className.split(\" \") : []\r\n      const myclassHtmlIndex = htmlClasses.indexOf('llp--auth--wrapper')\r\n      if(myclassHtmlIndex > -1) {\r\n        htmlClasses.splice(myclassHtmlIndex, 1)\r\n        htmlTag.className = htmlClasses.join(\" \")\r\n      }\r\n\r\n      //body \r\n      const bodyTag = document.getElementsByTagName(\"body\")[0]\r\n      let bodyClasses = bodyTag.className && bodyTag.className.length > 0 ? bodyTag.className.split(\" \") : []\r\n      const myclassBodyIndex = bodyClasses.indexOf('llp--auth--wrapper')\r\n      if(myclassBodyIndex > -1) {\r\n        bodyClasses.splice(myclassBodyIndex, 1)\r\n        bodyTag.className = bodyClasses.join(\" \")\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport {\r\n  Router,\r\n  NavigationEnd,\r\n  RouteConfigLoadStart,\r\n  RouteConfigLoadEnd,\r\n  ResolveStart,\r\n  ResolveEnd\r\n} from '@angular/router';\r\nimport { Subscription } from \"rxjs\";\r\nimport { MatSidenav } from '@angular/material';\r\nimport { MediaChange, ObservableMedia } from \"@angular/flex-layout\";\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ThemeService } from '../../../services/theme.service';\r\n// import PerfectScrollbar from 'perfect-scrollbar';\r\nimport { LayoutService } from '../../../services/layout.service';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-customer-layout',\r\n  templateUrl: './customer-layout.template.html'\r\n})\r\nexport class CustomerLayoutComponent implements OnInit {\r\n  public isModuleLoading: Boolean = false;\r\n  private moduleLoaderSub: Subscription;\r\n  private layoutConfSub: Subscription;\r\n  private routerEventSub: Subscription;\r\n  private mediaSub: Subscription;\r\n  // private sidebarPS: PerfectScrollbar;\r\n  public  scrollConfig = {}\r\n  public layoutConf: any = {};\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public translate: TranslateService,\r\n    public themeService: ThemeService,\r\n    private layout: LayoutService,\r\n    private media: ObservableMedia\r\n  ) {\r\n    // Close sidenav after route change in mobile\r\n    this.routerEventSub = router.events.pipe(filter(event => event instanceof NavigationEnd))\r\n    .subscribe((routeChange: NavigationEnd) => {\r\n      this.layout.adjustLayout({ route: routeChange.url });\r\n    });\r\n\r\n    // Translator init\r\n    const browserLang: string = translate.getBrowserLang();\r\n    translate.use(browserLang.match(/en|fr/) ? browserLang : 'en');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.layoutConf = this.layout.layoutConf;\r\n\r\n    // FOR MODULE LOADER FLAG\r\n    this.moduleLoaderSub = this.router.events.subscribe(event => {\r\n      if(event instanceof RouteConfigLoadStart || event instanceof ResolveStart) {\r\n        this.isModuleLoading = true;\r\n      }\r\n      if(event instanceof RouteConfigLoadEnd || event instanceof ResolveEnd) {\r\n        this.isModuleLoading = false;\r\n      }\r\n    });\r\n  }\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.layout.adjustLayout(event);\r\n  }\r\n\r\n  scrollToTop(selector: string) {\r\n    if(document) {\r\n      let element = <HTMLElement>document.querySelector(selector);\r\n      element.scrollTop = 0;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.moduleLoaderSub) {\r\n      this.moduleLoaderSub.unsubscribe()\r\n    }\r\n    if (this.layoutConfSub) {\r\n      this.layoutConfSub.unsubscribe()\r\n    }\r\n    if(this.routerEventSub) {\r\n      this.routerEventSub.unsubscribe()\r\n    }\r\n  }\r\n  closeSidebar() {\r\n    this.layout.publishLayoutChange({\r\n      sidebarStyle: 'closed'\r\n    })\r\n  }\r\n\r\n}","module.exports = \"<div class=\\\"app-admin-wrap\\\" [dir]='layoutConf.dir'>\\r\\n  <!-- Header for top navigation layout -->\\r\\n  <!-- ONLY REQUIRED FOR **TOP** NAVIGATION LAYOUT -->\\r\\n  <app-customer-header-top\\r\\n    *ngIf=\\\"layoutConf.navigationPos === 'top'\\\" \\r\\n    [notificPanel]=\\\"notificationPanel\\\">\\r\\n  </app-customer-header-top>\\r\\n  <!-- Main Container -->\\r\\n  <mat-sidenav-container \\r\\n  [dir]='layoutConf.dir'\\r\\n  class=\\\"app-admin-container app-side-nav-container mat-drawer-transition\\\"\\r\\n  [ngClass]=\\\"{\\r\\n    'navigation-top': layoutConf.navigationPos === 'top',\\r\\n    'sidebar-full': layoutConf.sidebarStyle === 'full',\\r\\n    'sidebar-compact': layoutConf.sidebarStyle === 'compact' && layoutConf.navigationPos === 'side',\\r\\n    'sidebar-compact-big': layoutConf.sidebarStyle === 'compact-big' && layoutConf.navigationPos === 'side',\\r\\n    'layout-intransition': layoutConf.layoutInTransition,\\r\\n    'sidebar-opened': layoutConf.sidebarStyle !== 'closed' && layoutConf.navigationPos === 'side',\\r\\n    'sidebar-closed': layoutConf.sidebarStyle === 'closed',\\r\\n    'fixed-topbar': layoutConf.topbarFixed && layoutConf.navigationPos === 'side'\\r\\n  }\\\">\\r\\n  <!-- SIDEBAR -->\\r\\n  <!-- ONLY REQUIRED FOR **SIDE** NAVIGATION LAYOUT -->\\r\\n  <app-sidebar-side *ngIf=\\\"layoutConf.navigationPos === 'side'\\\"></app-sidebar-side>\\r\\n  \\r\\n  <!-- Top navigation layout (navigation for mobile screen) -->\\r\\n  <!-- ONLY REQUIRED FOR **TOP** NAVIGATION MOBILE LAYOUT -->\\r\\n  <app-sidebar-top *ngIf=\\\"layoutConf.navigationPos === 'top' && layoutConf.isMobile\\\"></app-sidebar-top>\\r\\n\\r\\n    <!-- App content -->\\r\\n    <div class=\\\"main-content-wrap\\\" [perfectScrollbar]=\\\"scrollConfig\\\" [disabled]=\\\"layoutConf.topbarFixed\\\">\\r\\n      <!-- Header for side navigation layout -->\\r\\n      <!-- ONLY REQUIRED FOR **SIDE** NAVIGATION LAYOUT -->\\r\\n      <app-header-side \\r\\n        *ngIf=\\\"layoutConf.navigationPos === 'side'\\\"\\r\\n        [notificPanel]=\\\"notificationPanel\\\">\\r\\n      </app-header-side>\\r\\n\\r\\n      <div class=\\\"rightside-content-hold\\\" [perfectScrollbar]=\\\"scrollConfig\\\" [disabled]=\\\"!layoutConf.topbarFixed\\\">\\r\\n        <!-- View Loader -->\\r\\n        <div class=\\\"view-loader\\\" *ngIf=\\\"isModuleLoading\\\">\\r\\n          <div class=\\\"spinner\\\">\\r\\n            <div class=\\\"double-bounce1 mat-bg-accent\\\"></div>\\r\\n            <div class=\\\"double-bounce2 mat-bg-primary\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Breadcrumb -->\\r\\n        <app-breadcrumb></app-breadcrumb>\\r\\n        <!-- View outlet -->\\r\\n        <router-outlet></router-outlet>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- View overlay for mobile navigation -->\\r\\n    <div class=\\\"sidebar-backdrop\\\"\\r\\n    [ngClass]=\\\"{'visible': layoutConf.sidebarStyle !== 'closed' && layoutConf.isMobile}\\\"\\r\\n    (click)=\\\"closeSidebar()\\\"></div>\\r\\n    \\r\\n    <!-- Notificaation bar -->\\r\\n    <mat-sidenav #notificationPanel mode=\\\"over\\\" class=\\\"\\\" position=\\\"end\\\">\\r\\n      <div class=\\\"navigation-hold\\\" fxLayout=\\\"column\\\">\\r\\n        <app-notifications [notificPanel]=\\\"notificationPanel\\\"></app-notifications>\\r\\n      </div>\\r\\n    </mat-sidenav>\\r\\n  </mat-sidenav-container>\\r\\n</div>\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-landing-layout',\r\n  templateUrl: './landing-layout.component.html'\r\n})\r\nexport class LandingLayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"text-center mat-bg-primary pt-1 pb-1\\\">\\r\\n  <h6 class=\\\"m-0\\\">Notifications</h6>\\r\\n</div>\\r\\n<mat-nav-list class=\\\"notification-list\\\" role=\\\"list\\\">\\r\\n  <!-- Notification item -->\\r\\n  <mat-list-item *ngFor=\\\"let n of notifications\\\" class=\\\"notific-item\\\" role=\\\"listitem\\\" routerLinkActive=\\\"open\\\">\\r\\n    <mat-icon [color]=\\\"n.color\\\" class=\\\"notific-icon mr-1\\\">{{n.icon}}</mat-icon>\\r\\n    <a [routerLink]=\\\"[n.route || '/dashboard']\\\">\\r\\n      <div class=\\\"mat-list-text\\\">\\r\\n        <h4 class=\\\"message\\\">{{n.message}}</h4>\\r\\n        <small class=\\\"time text-muted\\\">{{n.time}}</small>\\r\\n      </div>\\r\\n    </a>\\r\\n  </mat-list-item>\\r\\n</mat-nav-list>\\r\\n<div class=\\\"text-center mt-1\\\" *ngIf=\\\"notifications.length\\\">\\r\\n  <small><a href=\\\"#\\\" (click)=\\\"clearAll($event)\\\">Clear all notifications</a></small>\\r\\n</div>\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { MatSidenav } from '@angular/material';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-notifications',\r\n  templateUrl: './notifications.component.html'\r\n})\r\nexport class NotificationsComponent implements OnInit {\r\n  @Input() notificPanel;\r\n\r\n  // Dummy notifications\r\n  notifications = [{\r\n    message: 'New contact added',\r\n    icon: 'assignment_ind',\r\n    time: '1 min ago',\r\n    route: '/inbox',\r\n    color: 'primary'\r\n  }, {\r\n    message: 'New message',\r\n    icon: 'chat',\r\n    time: '4 min ago',\r\n    route: '/chat',\r\n    color: 'accent'\r\n  }, {\r\n    message: 'Server rebooted',\r\n    icon: 'settings_backup_restore',\r\n    time: '12 min ago',\r\n    route: '/charts',\r\n    color: 'warn'\r\n  }]\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.router.events.subscribe((routeChange) => {\r\n        if (routeChange instanceof NavigationEnd) {\r\n          this.notificPanel.close();\r\n        }\r\n    });\r\n  }\r\n  clearAll(e) {\r\n    e.preventDefault();\r\n    this.notifications = [];\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"sidebar-panel\\\">\\r\\n  <div id=\\\"scroll-area\\\" [perfectScrollbar] class=\\\"navigation-hold\\\" fxLayout=\\\"column\\\">\\r\\n    <!-- App Logo -->\\r\\n    <div class=\\\"branding default-bg\\\">\\r\\n      <img src=\\\"assets/images/logo.png\\\" alt=\\\"\\\" class=\\\"app-logo\\\">\\r\\n      <!-- Two different logos for dark and light themes -->\\r\\n      <img \\r\\n      src=\\\"assets/images/logo-text-white.png\\\" \\r\\n      alt=\\\"\\\" \\r\\n      class=\\\"app-logo-text\\\"\\r\\n      *ngIf=\\\"themeService.activatedTheme?.name?.indexOf('dark') !== -1\\\">\\r\\n      <img \\r\\n      src=\\\"assets/images/logo-text.png\\\" \\r\\n      alt=\\\"\\\" \\r\\n      class=\\\"app-logo-text\\\"\\r\\n      *ngIf=\\\"themeService.activatedTheme?.name?.indexOf('dark') === -1\\\">\\r\\n    </div>\\r\\n\\r\\n    <!-- Sidebar user -->\\r\\n    <div class=\\\"app-user\\\">\\r\\n      <div class=\\\"app-user-photo\\\">\\r\\n        <img src=\\\"assets/images/face-7.jpg\\\" alt=\\\"\\\">\\r\\n      </div>\\r\\n      <span class=\\\"app-user-name mb-05\\\">\\r\\n        <mat-icon class=\\\"icon-xs text-muted\\\">lock</mat-icon> \\r\\n        Watson Joyce\\r\\n      </span>\\r\\n      <!-- Small buttons -->\\r\\n      <div class=\\\"app-user-controls\\\">\\r\\n        <button \\r\\n        class=\\\"text-muted\\\"\\r\\n        mat-icon-button \\r\\n        mat-xs-button\\r\\n        [matMenuTriggerFor]=\\\"appUserMenu\\\">\\r\\n          <mat-icon>settings</mat-icon>\\r\\n        </button>\\r\\n        <button \\r\\n        class=\\\"text-muted\\\"\\r\\n        mat-icon-button \\r\\n        mat-xs-button\\r\\n        matTooltip=\\\"Inbox\\\"\\r\\n        routerLink=\\\"/inbox\\\">\\r\\n          <mat-icon>email</mat-icon>\\r\\n        </button>\\r\\n        <button \\r\\n        class=\\\"text-muted\\\"\\r\\n        mat-icon-button \\r\\n        mat-xs-button\\r\\n        matTooltip=\\\"Sign Out\\\"\\r\\n        routerLink=\\\"/sessions/signin\\\">\\r\\n          <mat-icon>exit_to_app</mat-icon>\\r\\n        </button>\\r\\n        <mat-menu #appUserMenu=\\\"matMenu\\\">\\r\\n            <button mat-menu-item routerLink=\\\"/profile/overview\\\">\\r\\n              <mat-icon>account_box</mat-icon>\\r\\n              <span>Profile</span>\\r\\n            </button>\\r\\n            <button mat-menu-item routerLink=\\\"/profile/settings\\\">\\r\\n              <mat-icon>settings</mat-icon>\\r\\n              <span>Account Settings</span>\\r\\n            </button>\\r\\n            <button mat-menu-item routerLink=\\\"/calendar\\\">\\r\\n              <mat-icon>date_range</mat-icon>\\r\\n              <span>Calendar</span>\\r\\n            </button>\\r\\n            <button mat-menu-item routerLink=\\\"/sessions/signin\\\">\\r\\n              <mat-icon>exit_to_app</mat-icon>\\r\\n              <span>Sign out</span>\\r\\n            </button>\\r\\n          </mat-menu>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Navigation -->\\r\\n    <app-sidenav [items]=\\\"menuItems\\\" [hasIconMenu]=\\\"hasIconTypeMenuItem\\\" [iconMenuTitle]=\\\"iconTypeMenuTitle\\\"></app-sidenav>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\r\nimport { NavigationService } from \"../../../shared/services/navigation.service\";\r\nimport { ThemeService } from '../../services/theme.service';\r\nimport { Subscription } from \"rxjs\";\r\n// import PerfectScrollbar from 'perfect-scrollbar';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-side',\r\n  templateUrl: './sidebar-side.component.html'\r\n})\r\nexport class SidebarSideComponent implements OnInit, OnDestroy, AfterViewInit {\r\n  // private sidebarPS: PerfectScrollbar;\r\n  public menuItems: any[];\r\n  public hasIconTypeMenuItem: boolean;\r\n  public iconTypeMenuTitle: string;\r\n  private menuItemsSub: Subscription;\r\n  constructor(\r\n    private navService: NavigationService,\r\n    public themeService: ThemeService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.iconTypeMenuTitle = this.navService.iconTypeMenuTitle;\r\n    this.menuItemsSub = this.navService.menuItems$.subscribe(menuItem => {\r\n      this.menuItems = menuItem;\r\n      //Checks item list has any icon type.\r\n      this.hasIconTypeMenuItem = !!this.menuItems.filter(item => item.type === 'icon').length;\r\n    });\r\n  }\r\n  ngAfterViewInit() {\r\n    // setTimeout(() => {\r\n    //   this.sidebarPS = new PerfectScrollbar('#scroll-area', {\r\n    //     suppressScrollX: true\r\n    //   })\r\n    // })\r\n  }\r\n  ngOnDestroy() {\r\n    // if(this.sidebarPS) {\r\n    //   this.sidebarPS.destroy();\r\n    // }\r\n    if(this.menuItemsSub) {\r\n      this.menuItemsSub.unsubscribe()\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"sidebar-panel\\\">\\r\\n  <div id=\\\"sidebar-top-scroll-area\\\" [perfectScrollbar] class=\\\"navigation-hold\\\" fxLayout=\\\"column\\\">\\r\\n    <app-sidenav [items]=\\\"menuItems\\\"></app-sidenav>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\r\n// import PerfectScrollbar from 'perfect-scrollbar';\r\nimport { NavigationService } from \"../../../shared/services/navigation.service\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-sidebar-top',\r\n  templateUrl: './sidebar-top.component.html'\r\n})\r\nexport class SidebarTopComponent implements OnInit, OnDestroy, AfterViewInit {\r\n  // private sidebarPS: PerfectScrollbar;\r\n  public menuItems: any[];\r\n  private menuItemsSub: Subscription;\r\n  constructor(\r\n    private navService: NavigationService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.menuItemsSub = this.navService.menuItems$.subscribe(menuItem => {\r\n      this.menuItems = menuItem.filter(item => item.type !== 'icon' && item.type !== 'separator');\r\n    });\r\n  }\r\n  ngAfterViewInit() {\r\n    // setTimeout(() => {\r\n    //   this.sidebarPS = new PerfectScrollbar('#sidebar-top-scroll-area', {\r\n    //     suppressScrollX: true\r\n    //   })\r\n    // })\r\n  }\r\n  ngOnDestroy() {\r\n    // if(this.sidebarPS) {\r\n    //   this.sidebarPS.destroy();\r\n    // }\r\n    if( this.menuItemsSub ) {\r\n      this.menuItemsSub.unsubscribe()\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  templateUrl: './sidenav.template.html'\r\n})\r\nexport class SidenavComponent {\r\n  @Input('items') public menuItems: any[] = [];\r\n  @Input('hasIconMenu') public hasIconTypeMenuItem: boolean;\r\n  @Input('iconMenuTitle') public iconTypeMenuTitle: string;\r\n\r\n  constructor() {}\r\n  ngOnInit() {}\r\n\r\n  // Only for demo purpose\r\n  addMenuItem() {\r\n    this.menuItems.push({\r\n      name: 'ITEM',\r\n      type: 'dropDown',\r\n      tooltip: 'Item',\r\n      icon: 'done',\r\n      state: 'material',\r\n      sub: [\r\n        {name: 'SUBITEM', state: 'cards'},\r\n        {name: 'SUBITEM', state: 'buttons'}\r\n      ]\r\n    });\r\n  }\r\n}","module.exports = \"<div class=\\\"sidenav-hold\\\">\\r\\n  <div class=\\\"icon-menu\\\" *ngIf=\\\"hasIconTypeMenuItem\\\">\\r\\n    <!-- Icon menu separator -->\\r\\n    <div class=\\\"mt-1 mb-1 nav-item-sep\\\">\\r\\n      <mat-divider [ngStyle]=\\\"{margin: '0 -24px'}\\\"></mat-divider>\\r\\n      <span class=\\\"text-muted icon-menu-title\\\">{{iconTypeMenuTitle}}</span>\\r\\n    </div>\\r\\n    <!-- Icon menu items -->\\r\\n    <div class=\\\"icon-menu-item\\\" *ngFor=\\\"let item of menuItems\\\">\\r\\n      <button *ngIf=\\\"!item.disabled && item.type === 'icon'\\\" mat-raised-button [matTooltip]=\\\"item.tooltip\\\" routerLink=\\\"/{{item.state}}\\\"\\r\\n        routerLinkActive=\\\"mat-bg-primary\\\">\\r\\n        <mat-icon>{{item.icon}}</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <ul appDropdown class=\\\"sidenav\\\">\\r\\n    <li *ngFor=\\\"let item of menuItems\\\" appDropdownLink routerLinkActive=\\\"open\\\">\\r\\n      <div class=\\\"nav-item-sep\\\" *ngIf=\\\"item.type === 'separator'\\\">\\r\\n        <mat-divider></mat-divider>\\r\\n        <span class=\\\"text-muted\\\">{{item.name | translate}}</span>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!item.disabled && item.type !== 'separator' && item.type !== 'icon'\\\" class=\\\"lvl1\\\">\\r\\n        <a routerLink=\\\"/{{item.state}}\\\" appDropdownToggle matRipple *ngIf=\\\"item.type === 'link'\\\">\\r\\n          <mat-icon>{{item.icon}}</mat-icon>\\r\\n          <span class=\\\"item-name lvl1\\\">{{item.name | translate}}</span>\\r\\n          <span fxFlex></span>\\r\\n          <span class=\\\"menuitem-badge mat-bg-{{ badge.color }}\\\" [ngStyle]=\\\"{background: badge.color}\\\" *ngFor=\\\"let badge of item.badges\\\">{{ badge.value }}</span>\\r\\n        </a>\\r\\n        <a [href]=\\\"item.state\\\" appDropdownToggle matRipple *ngIf=\\\"item.type === 'extLink'\\\" >\\r\\n          <mat-icon>{{item.icon}}</mat-icon>\\r\\n          <span class=\\\"item-name lvl1\\\">{{item.name | translate}}</span>\\r\\n          <span fxFlex></span>\\r\\n          <span class=\\\"menuitem-badge mat-bg-{{ badge.color }}\\\" [ngStyle]=\\\"{background: badge.color}\\\" *ngFor=\\\"let badge of item.badges\\\">{{ badge.value }}</span>\\r\\n        </a>\\r\\n\\r\\n        <!-- DropDown -->\\r\\n        <a *ngIf=\\\"item.type === 'dropDown'\\\" appDropdownToggle matRipple>\\r\\n          <mat-icon>{{item.icon}}</mat-icon>\\r\\n          <span class=\\\"item-name lvl1\\\">{{item.name | translate}}</span>\\r\\n          <span fxFlex></span>\\r\\n          <span class=\\\"menuitem-badge mat-bg-{{ badge.color }}\\\" [ngStyle]=\\\"{background: badge.color}\\\" *ngFor=\\\"let badge of item.badges\\\">{{ badge.value }}</span>\\r\\n          <mat-icon class=\\\"menu-caret\\\">keyboard_arrow_right</mat-icon>\\r\\n        </a>\\r\\n        <!-- LEVEL 2 -->\\r\\n        <ul class=\\\"submenu lvl2\\\" appDropdown *ngIf=\\\"item.type === 'dropDown'\\\">\\r\\n          <li *ngFor=\\\"let itemLvL2 of item.sub\\\" appDropdownLink routerLinkActive=\\\"open\\\">\\r\\n\\r\\n            <a routerLink=\\\"{{item.state ? '/'+item.state : ''}}/{{itemLvL2.state}}\\\" appDropdownToggle *ngIf=\\\"itemLvL2.type !== 'dropDown'\\\"\\r\\n              matRipple>\\r\\n              <span class=\\\"item-name lvl2\\\">{{itemLvL2.name | translate}}</span>\\r\\n              <span fxFlex></span>\\r\\n            </a>\\r\\n\\r\\n            <a *ngIf=\\\"itemLvL2.type === 'dropDown'\\\" appDropdownToggle matRipple>\\r\\n              <span class=\\\"item-name lvl2\\\">{{itemLvL2.name | translate}}</span>\\r\\n              <span fxFlex></span>\\r\\n              <mat-icon class=\\\"menu-caret\\\">keyboard_arrow_right</mat-icon>\\r\\n            </a>\\r\\n\\r\\n            <!-- LEVEL 3 -->\\r\\n            <ul class=\\\"submenu lvl3\\\" appDropdown *ngIf=\\\"itemLvL2.type === 'dropDown'\\\">\\r\\n              <li *ngFor=\\\"let itemLvL3 of itemLvL2.sub\\\" appDropdownLink routerLinkActive=\\\"open\\\">\\r\\n                <a routerLink=\\\"{{item.state ? '/'+item.state : ''}}{{itemLvL2.state ? '/'+itemLvL2.state : ''}}/{{itemLvL3.state}}\\\" appDropdownToggle\\r\\n                  matRipple>\\r\\n                  <span class=\\\"item-name lvl3\\\">{{itemLvL3.name | translate}}</span>\\r\\n                </a>\\r\\n              </li>\\r\\n            </ul>\\r\\n\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\"","import { Directive, HostListener, Inject } from '@angular/core';\r\nimport { DropdownLinkDirective } from './dropdown-link.directive';\r\n\r\n@Directive({\r\n  selector: '[appDropdownToggle]'\r\n})\r\nexport class DropdownAnchorDirective {\r\n\r\n  protected navlink: DropdownLinkDirective;\r\n  \r\n    constructor( @Inject(DropdownLinkDirective) navlink: DropdownLinkDirective) {\r\n      this.navlink = navlink;\r\n    }\r\n  \r\n    @HostListener('click', ['$event'])\r\n    onClick(e: any) {\r\n      this.navlink.toggle();\r\n    }\r\n}\r\n","import {\r\n  Directive, HostBinding, Inject, Input, OnInit, OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { AppDropdownDirective } from './dropdown.directive';\r\n\r\n@Directive({\r\n  selector: '[appDropdownLink]'\r\n})\r\nexport class DropdownLinkDirective {\r\n\r\n  @Input() public group: any;\r\n  \r\n    @HostBinding('class.open')\r\n    @Input()\r\n    get open(): boolean {\r\n      return this._open;\r\n    }\r\n  \r\n    set open(value: boolean) {\r\n      this._open = value;\r\n      if (value) {\r\n        this.nav.closeOtherLinks(this);\r\n      }\r\n    }\r\n  \r\n    protected _open: boolean;\r\n    protected nav: AppDropdownDirective;\r\n  \r\n    public constructor(@Inject(AppDropdownDirective) nav: AppDropdownDirective) {\r\n      this.nav = nav;\r\n    }\r\n  \r\n    public ngOnInit(): any {\r\n      this.nav.addLink(this);\r\n    }\r\n  \r\n    public ngOnDestroy(): any {\r\n      this.nav.removeGroup(this);\r\n    }\r\n  \r\n    public toggle(): any {\r\n      this.open = !this.open;\r\n    }\r\n\r\n}\r\n","import { Directive } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { DropdownLinkDirective } from './dropdown-link.directive';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[appDropdown]'\r\n})\r\nexport class AppDropdownDirective {\r\n  protected navlinks: Array<DropdownLinkDirective> = [];\r\n  \r\n    private _router: Subscription;\r\n  \r\n    public closeOtherLinks(openLink: DropdownLinkDirective): void {\r\n      this.navlinks.forEach((link: DropdownLinkDirective) => {\r\n        if (link !== openLink) {\r\n          link.open = false;\r\n        }\r\n      });\r\n    }\r\n  \r\n    public addLink(link: DropdownLinkDirective): void {\r\n      this.navlinks.push(link);\r\n    }\r\n  \r\n    public removeGroup(link: DropdownLinkDirective): void {\r\n      const index = this.navlinks.indexOf(link);\r\n      if (index !== -1) {\r\n        this.navlinks.splice(index, 1);\r\n      }\r\n    }\r\n  \r\n    public getUrl() {\r\n      return this.router.url;\r\n    }\r\n  \r\n    public ngOnInit(): any {\r\n      this._router = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\r\n        this.navlinks.forEach((link: DropdownLinkDirective) => {\r\n          if (link.group) {\r\n            const routeUrl = this.getUrl();\r\n            const currentUrl = routeUrl.split('/');\r\n            if (currentUrl.indexOf( link.group ) > 0) {\r\n              link.open = true;\r\n              this.closeOtherLinks(link);\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n  \r\n    constructor( private router: Router) {}\r\n\r\n}\r\n","import { Directive, Host, Self, Optional, OnDestroy, OnInit } from '@angular/core';\r\nimport { MediaChange, ObservableMedia } from \"@angular/flex-layout\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { MatSidenav } from '@angular/material';\r\n\r\n\r\n@Directive({\r\n  selector: '[EgretSideNavToggle]'\r\n})\r\nexport class EgretSideNavToggleDirective implements OnInit, OnDestroy {\r\n  isMobile;\r\n  screenSizeWatcher: Subscription;\r\n  constructor(\r\n    private media: ObservableMedia,\r\n    @Host() @Self() @Optional() public sideNav: MatSidenav\r\n  ) { \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initSideNav();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if(this.screenSizeWatcher) {\r\n      this.screenSizeWatcher.unsubscribe()\r\n    }\r\n  }\r\n\r\n  updateSidenav() {\r\n    var self = this;\r\n    setTimeout(() => {\r\n      self.sideNav.opened = !self.isMobile;\r\n      self.sideNav.mode = self.isMobile ? 'over' : 'side';\r\n    })\r\n  }\r\n  initSideNav() {\r\n    this.isMobile = this.media.isActive('xs') || this.media.isActive('sm');\r\n    this.updateSidenav();\r\n    this.screenSizeWatcher = this.media.subscribe((change: MediaChange) => {\r\n      this.isMobile = (change.mqAlias == 'xs') || (change.mqAlias == 'sm');\r\n      this.updateSidenav();\r\n    });\r\n  }\r\n\r\n}\r\n","import { Directive, ElementRef, Attribute, OnInit } from '@angular/core';\r\n\r\n@Directive({ selector: '[fontSize]' })\r\nexport class FontSizeDirective implements OnInit {\r\n  constructor( @Attribute('fontSize') public fontSize: string, private el: ElementRef) { }\r\n  ngOnInit() {\r\n    this.el.nativeElement.fontSize = this.fontSize;\r\n  }\r\n}\r\n","import { Directive, ElementRef, Attribute, OnInit, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[scrollTo]' })\r\nexport class ScrollToDirective implements OnInit {\r\n  constructor( @Attribute('scrollTo') public elmID: string, private el: ElementRef) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  currentYPosition() {\r\n    // Firefox, Chrome, Opera, Safari\r\n    if (self.pageYOffset) return self.pageYOffset;\r\n    // Internet Explorer 6 - standards mode\r\n    if (document.documentElement && document.documentElement.scrollTop)\r\n      return document.documentElement.scrollTop;\r\n    // Internet Explorer 6, 7 and 8\r\n    if (document.body.scrollTop) return document.body.scrollTop;\r\n    return 0;\r\n  };\r\n\r\n  elmYPosition(eID) {\r\n    var elm = document.getElementById(eID);\r\n    var y = elm.offsetTop;\r\n    var node: any = elm;\r\n    while (node.offsetParent && node.offsetParent != document.body) {\r\n      node = node.offsetParent;\r\n      y += node.offsetTop;\r\n    }\r\n    return y;\r\n  };\r\n\r\n  @HostListener('click', ['$event'])\r\n  smoothScroll() {\r\n    if(!this.elmID)\r\n      return;\r\n    var startY = this.currentYPosition();\r\n    var stopY = this.elmYPosition(this.elmID);\r\n    var distance = stopY > startY ? stopY - startY : startY - stopY;\r\n    if (distance < 100) {\r\n      scrollTo(0, stopY);\r\n      return;\r\n    }\r\n    var speed = Math.round(distance / 50);\r\n    if (speed >= 20) speed = 20;\r\n    var step = Math.round(distance / 25);\r\n    var leapY = stopY > startY ? startY + step : startY - step;\r\n    var timer = 0;\r\n    if (stopY > startY) {\r\n      for (var i = startY; i < stopY; i += step) {\r\n        setTimeout(\"window.scrollTo(0, \" + leapY + \")\", timer * speed);\r\n        leapY += step;\r\n        if (leapY > stopY) leapY = stopY;\r\n        timer++;\r\n      }\r\n      return;\r\n    }\r\n    for (var i = startY; i > stopY; i -= step) {\r\n      setTimeout(\"window.scrollTo(0, \" + leapY + \")\", timer * speed);\r\n      leapY -= step;\r\n      if (leapY < stopY) leapY = stopY;\r\n      timer++;\r\n    }\r\n    return false;\r\n  };\r\n}","export function getQueryParam(prop) {\r\n  var params = {};\r\n  var search = decodeURIComponent(window.location.href.slice(window.location.href.indexOf('?') + 1));\r\n  var definitions = search.split('&');\r\n  definitions.forEach(function (val, key) {\r\n    var parts = val.split('=', 2);\r\n    params[parts[0]] = parts[1];\r\n  });\r\n  return (prop && prop in params) ? params[prop] : params;\r\n}","export class ChatDB {\r\n  public static user = [\r\n    {\r\n      id: \"7863a6802ez0e277a0f98534\",\r\n      name: \"John Doe\",\r\n      avatar: \"assets/images/face-1.jpg\",\r\n      status: \"online\",\r\n      chatInfo: [\r\n        {\r\n          chatId: \"89564a680b3249760ea21fe77\",\r\n          contactId: \"323sa680b3249760ea21rt47\",\r\n          contactName: \"Frank Powell\",\r\n          unread: 4,\r\n          lastChatTime: \"2017-06-12T02:10:18.931Z\"\r\n        },\r\n        {\r\n          chatId: \"3289564a680b2134760ea21fe7753\",\r\n          contactId: \"14663a3406eb47ffa63d4fec9429cb71\",\r\n          contactName: \"Betty Diaz\",\r\n          unread: 0,\r\n          lastChatTime: \"2017-06-12T02:10:18.931Z\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n  public static contacts = [\r\n    {\r\n      id: \"323sa680b3249760ea21rt47\",\r\n      name: \"Frank Powell\",\r\n      avatar: \"assets/images/faces/13.jpg\",\r\n      status: \"online\",\r\n      mood: \"\"\r\n    },\r\n    {\r\n      id: \"14663a3406eb47ffa63d4fec9429cb71\",\r\n      name: \"Betty Diaz\",\r\n      avatar: \"assets/images/faces/12.jpg\",\r\n      status: \"online\",\r\n      mood: \"\"\r\n    },\r\n    {\r\n      id: \"43bd9bc59d164b5aea498e3ae1c24c3c\",\r\n      name: \"Brian Stephens\",\r\n      avatar: \"assets/images/faces/3.jpg\",\r\n      status: \"online\",\r\n      mood: \"\"\r\n    },\r\n    {\r\n      id: \"3fc8e01f3ce649d1caf884fbf4f698e4\",\r\n      name: \"Jacqueline Day\",\r\n      avatar: \"assets/images/faces/16.jpg\",\r\n      status: \"offline\",\r\n      mood: \"\"\r\n    },\r\n    {\r\n      id: \"e929b1d790ab49968ed8e34648553df4\",\r\n      name: \"Arthur Mendoza\",\r\n      avatar: \"assets/images/faces/10.jpg\",\r\n      status: \"online\",\r\n      mood: \"\"\r\n    },\r\n    {\r\n      id: \"d6caf04bba614632b5fecf91aebf4564\",\r\n      name: \"Jeremy Lee\",\r\n      avatar: \"assets/images/faces/9.jpg\",\r\n      status: \"offline\",\r\n      mood: \"\"\r\n    },\r\n    {\r\n      id: \"be0fb188c8e242f097fafa24632107e4\",\r\n      name: \"Johnny Newman\",\r\n      avatar: \"assets/images/faces/5.jpg\",\r\n      status: \"offline\",\r\n      mood: \"\"\r\n    },\r\n    {\r\n      id: \"dea902191b964a68ba5f2d93cff37e13\",\r\n      name: \"Jeffrey Little\",\r\n      avatar: \"assets/images/faces/15.jpg\",\r\n      status: \"online\",\r\n      mood: \"\"\r\n    },\r\n    {\r\n      id: \"0bf58f5ccc4543a9f8747350b7bda3c7\",\r\n      name: \"Barbara Romero\",\r\n      avatar: \"assets/images/faces/4.jpg\",\r\n      status: \"offline\",\r\n      mood: \"\"\r\n    },\r\n    {\r\n      id: \"c5d7498bbcb84d81fc72168871ac6a6e\",\r\n      name: \"Daniel James\",\r\n      avatar: \"assets/images/faces/2.jpg\",\r\n      status: \"offline\",\r\n      mood: \"\"\r\n    },\r\n    {\r\n      id: \"97bfbdd9413e46efdaca2010400fe18c\",\r\n      name: \"Alice Sanders\",\r\n      avatar: \"assets/images/faces/17.jpg\",\r\n      status: \"offline\",\r\n      mood: \"\"\r\n    }\r\n  ];\r\n  public static chatCollection = [\r\n    {\r\n      id: \"89564a680b3249760ea21fe77\",\r\n      chats: [\r\n        {\r\n          contactId: \"323sa680b3249760ea21rt47\",\r\n          text: \"Do you ever find yourself falling into the “discount trap?”\",\r\n          time: \"2018-02-32T08:45:28.291Z\"\r\n        },\r\n        {\r\n          contactId: \"7863a6802ez0e277a0f98534\",\r\n          text: \"Giving away your knowledge or product just to gain clients?\",\r\n          time: \"2018-02-32T08:45:28.291Z\"\r\n        },\r\n        {\r\n          contactId: \"323sa680b3249760ea21rt47\",\r\n          text: \"Yes\",\r\n          time: \"2018-02-32T08:45:28.291Z\"\r\n        },\r\n        {\r\n          contactId: \"7863a6802ez0e277a0f98534\",\r\n          text: \"Don’t feel bad. It happens to a lot of us\",\r\n          time: \"2018-02-32T08:45:28.291Z\"\r\n        },\r\n        {\r\n          contactId: \"323sa680b3249760ea21rt47\",\r\n          text: \"Do you ever find yourself falling into the “discount trap?”\",\r\n          time: \"2018-02-32T08:45:28.291Z\"\r\n        },\r\n        {\r\n          contactId: \"7863a6802ez0e277a0f98534\",\r\n          text: \"Giving away your knowledge or product just to gain clients?\",\r\n          time: \"2018-02-32T08:45:28.291Z\"\r\n        },\r\n        {\r\n          contactId: \"323sa680b3249760ea21rt47\",\r\n          text: \"Yes\",\r\n          time: \"2018-02-32T08:45:28.291Z\"\r\n        },\r\n        {\r\n          contactId: \"7863a6802ez0e277a0f98534\",\r\n          text: \"Don’t feel bad. It happens to a lot of us\",\r\n          time: \"2018-02-32T08:45:28.291Z\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: \"3289564a680b2134760ea21fe7753\",\r\n      chats: [\r\n        {\r\n          contactId: \"14663a3406eb47ffa63d4fec9429cb71\",\r\n          text: \"Do you ever find yourself falling into the “discount trap?”\",\r\n          time: \"2018-03-32T08:45:28.291Z\"\r\n        },\r\n        {\r\n          contactId: \"7863a6802ez0e277a0f98534\",\r\n          text: \"Giving away your knowledge or product just to gain clients?\",\r\n          time: \"2018-03-32T08:45:28.291Z\"\r\n        },\r\n        {\r\n          contactId: \"14663a3406eb47ffa63d4fec9429cb71\",\r\n          text: \"Yes\",\r\n          time: \"2018-03-32T08:45:28.291Z\"\r\n        },\r\n        {\r\n          contactId: \"7863a6802ez0e277a0f98534\",\r\n          text: \"Don’t feel bad. It happens to a lot of us\",\r\n          time: \"2018-03-32T08:45:28.291Z\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n}\r\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\r\nimport { ChatDB } from './chat-db';\r\n\r\nexport class InMemoryDataService implements InMemoryDbService {\r\n  createDb() {\r\n    return { \r\n      'contacts': ChatDB.contacts,\r\n      'chat-collections': ChatDB.chatCollection,\r\n      'chat-user': ChatDB.user\r\n    }\r\n  }\r\n}","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({ name: 'excerpt' })\r\nexport class ExcerptPipe implements PipeTransform {\r\n  transform(text: string, limit: number = 5) {\r\n    if(text.length <= limit)\r\n      return text;\r\n    return text.substring(0, limit) + '...';\r\n  }\r\n}","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"getValueByKey\",\r\n  pure: false\r\n})\r\nexport class GetValueByKeyPipe implements PipeTransform {\r\n  transform(value: any[], id: number, property: string): any {\r\n    const filteredObj = value.find(item => {\r\n      if (item.id !== undefined) {\r\n        return item.id === id;\r\n      }\r\n\r\n      return false;\r\n    });\r\n\r\n    if (filteredObj) {\r\n      return filteredObj[property];\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({ name: 'relativeTime' })\r\nexport class RelativeTimePipe implements PipeTransform {\r\n  transform(value: Date) {\r\n    if(!(value instanceof Date))\r\n      value = new Date(value);\r\n\r\n    let seconds: number = Math.floor(((new Date()).getTime() - value.getTime()) / 1000);\r\n    let interval: number = Math.floor(seconds / 31536000);\r\n    \r\n    if (interval > 1) {\r\n      return interval + \" years ago\";\r\n    }\r\n    interval = Math.floor(seconds / 2592000);\r\n    if (interval > 1) {\r\n      return interval + \" months ago\";\r\n    }\r\n    interval = Math.floor(seconds / 86400);\r\n    if (interval > 1) {\r\n      return interval + \" days ago\";\r\n    }\r\n    interval = Math.floor(seconds / 3600);\r\n    if (interval > 1) {\r\n      return interval + \" hours ago\";\r\n    }\r\n    interval = Math.floor(seconds / 60);\r\n    if (interval > 1) {\r\n      return interval + \" minutes ago\";\r\n    }\r\n    return Math.floor(seconds) + \" seconds ago\";\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\ninterface IMenuItem {\r\n  type: string,       // Possible values: link/dropDown/icon/separator/extLink\r\n  name?: string,      // Used as display text for item and title for separator type\r\n  state?: string,     // Router state\r\n  icon?: string,      // Material icon name\r\n  tooltip?: string,   // Tooltip text \r\n  disabled?: boolean, // If true, item will not be appeared in sidenav.\r\n  sub?: IChildItem[], // Dropdown items\r\n  badges?: IBadge[]\r\n}\r\ninterface IChildItem {\r\n  type?: string,\r\n  name: string,       // Display text\r\n  state?: string,     // Router state\r\n  icon?: string,\r\n  sub?: IChildItem[]\r\n}\r\n\r\ninterface IBadge {\r\n  color: string;      // primary/accent/warn/hex color codes(#fff000)\r\n  value: string;      // Display text\r\n}\r\n\r\n@Injectable()\r\nexport class AdvisorNavService {\r\n  constructor() { }\r\n\r\n  // tslint:disable-next-line:member-ordering\r\n  iconMenu: IMenuItem[] = [\r\n    {\r\n      name: 'HOME',\r\n      type: 'link',\r\n      tooltip: 'Home',\r\n      icon: 'home',\r\n      state: 'advisor/nested1'\r\n    },\r\n    {\r\n      name: 'Legacies',\r\n      type: 'link',\r\n      tooltip: 'Profile',\r\n      icon: 'person',\r\n      state: 'advisor/legacies'\r\n    },\r\n    {\r\n      name: 'Leads',\r\n      type: 'link',\r\n      tooltip: 'Tour',\r\n      icon: 'flight_takeoff',\r\n      state: 'advisor/users'\r\n    },\r\n    {\r\n      type: 'separator',\r\n      name: 'Main Items'\r\n    }\r\n  ];\r\n\r\n  // Icon menu TITLE at the very top of navigation.\r\n  // This title will appear if any icon type item is present in menu.\r\n  iconTypeMenuTitle: string = 'Frequently Accessed';\r\n  // sets iconMenu as default;\r\n  menuItems = new BehaviorSubject<IMenuItem[]>(this.iconMenu);\r\n  // navigation component has subscribed to this Observable\r\n  menuItems$ = this.menuItems.asObservable();\r\n\r\n  // Customizer component uses this method to change menu.\r\n  // You can remove this method and customizer component.\r\n  // Or you can customize this method to supply different menu for\r\n  // different user type.\r\n  publishNavigationChange(menuType: string) {\r\n    switch (menuType) {\r\n      // case 'separator-menu':\r\n      //   this.menuItems.next(this.separatorMenu);\r\n      //   break;\r\n      // case 'icon-menu':\r\n      //   this.menuItems.next(this.iconMenu);\r\n      //   break;\r\n      default:\r\n        this.menuItems.next(this.iconMenu);\r\n    }\r\n  }\r\n}","import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Component, Inject } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-confirm',\r\n  template: `<h1 matDialogTitle>{{ data.title }}</h1>\r\n    <div mat-dialog-content>{{ data.message }}</div>\r\n    <div mat-dialog-actions>\r\n    <button \r\n    type=\"button\" \r\n    mat-raised-button\r\n    color=\"primary\" \r\n    (click)=\"dialogRef.close(true)\">OK</button>\r\n    &nbsp;\r\n    <span fxFlex></span>\r\n    <button \r\n    type=\"button\"\r\n    color=\"accent\"\r\n    mat-raised-button \r\n    (click)=\"dialogRef.close(false)\">Cancel</button>\r\n    </div>`,\r\n})\r\nexport class AppComfirmComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AppComfirmComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data:any\r\n  ) {}\r\n}","import { Observable } from 'rxjs';\r\nimport { MatDialogRef, MatDialog, MatDialogConfig } from '@angular/material';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { AppComfirmComponent } from './app-confirm.component';\r\n\r\ninterface confirmData {\r\n  title?: string,\r\n  message?: string\r\n}\r\n\r\n@Injectable()\r\nexport class AppConfirmService {\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  public confirm(data:confirmData = {}): Observable<boolean> {\r\n    data.title = data.title || 'Confirm';\r\n    data.message = data.message || 'Are you sure?';\r\n    let dialogRef: MatDialogRef<AppComfirmComponent>;\r\n    dialogRef = this.dialog.open(AppComfirmComponent, {\r\n      width: '380px',\r\n      disableClose: true,\r\n      data: {title: data.title, message: data.message}\r\n    });\r\n    return dialogRef.afterClosed();\r\n  }\r\n}","module.exports = \".mat-dialog-content {\\r\\n  min-height: 122px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3NlcnZpY2VzL2FwcC1sb2FkZXIvYXBwLWxvYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL3NlcnZpY2VzL2FwcC1sb2FkZXIvYXBwLWxvYWRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1kaWFsb2ctY29udGVudCB7XHJcbiAgbWluLWhlaWdodDogMTIycHg7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"text-center\\\">\\r\\n    <h6 class=\\\"m-0 pb-1\\\">{{ title }}</h6>\\r\\n    <div mat-dialog-content>\\r\\n        <mat-spinner [style.margin]=\\\"'auto'\\\"></mat-spinner>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-app-loader',\r\n  templateUrl: './app-loader.component.html',\r\n  styleUrls: ['./app-loader.component.css']\r\n})\r\nexport class AppLoaderComponent implements OnInit {\r\n  title;\r\n  message;\r\n  constructor(public dialogRef: MatDialogRef<AppLoaderComponent>) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { AppLoaderComponent } from './app-loader.component';\r\n\r\n@Injectable()\r\nexport class AppLoaderService {\r\n  dialogRef: MatDialogRef<AppLoaderComponent>;\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  public open(title: string = 'Please wait'): Observable<boolean> {\r\n    this.dialogRef = this.dialog.open(AppLoaderComponent, { disableClose: true, backdropClass: 'light-backdrop'});\r\n    this.dialogRef.updateSize('200px');\r\n    this.dialogRef.componentInstance.title = title;\r\n    return this.dialogRef.afterClosed();\r\n  }\r\n\r\n  public close() {\r\n    if(this.dialogRef)\r\n      this.dialogRef.close();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  public authToken;\r\n  private isAuthenticated = true; // Set this value dynamically\r\n  \r\n  constructor(private router: Router) {}\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (this.isAuthenticated) {\r\n      return true\r\n    }\r\n    this.router.navigate(['/auth/signin']);\r\n    return false;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\ninterface IMenuItem {\r\n  type: string,       // Possible values: link/dropDown/icon/separator/extLink\r\n  name?: string,      // Used as display text for item and title for separator type\r\n  state?: string,     // Router state\r\n  icon?: string,      // Material icon name\r\n  tooltip?: string,   // Tooltip text \r\n  disabled?: boolean, // If true, item will not be appeared in sidenav.\r\n  sub?: IChildItem[], // Dropdown items\r\n  badges?: IBadge[]\r\n}\r\ninterface IChildItem {\r\n  type?: string,\r\n  name: string,       // Display text\r\n  state?: string,     // Router state\r\n  icon?: string,\r\n  sub?: IChildItem[]\r\n}\r\n\r\ninterface IBadge {\r\n  color: string;      // primary/accent/warn/hex color codes(#fff000)\r\n  value: string;      // Display text\r\n}\r\n\r\n@Injectable()\r\nexport class CustNavService {\r\n  constructor() { }\r\n\r\n  // tslint:disable-next-line:member-ordering\r\n  iconMenu: IMenuItem[] = [\r\n    {\r\n      name: 'HOME',\r\n      type: 'link',\r\n      tooltip: 'Home',\r\n      icon: 'home',\r\n      state: 'customer/nested1'\r\n    },\r\n    {\r\n      name: 'People',\r\n      type: 'link',\r\n      tooltip: 'Profile',\r\n      icon: 'person',\r\n      state: 'customer/gallery'\r\n    },\r\n    {\r\n      name: 'Professionals',\r\n      type: 'link',\r\n      tooltip: 'Tour',\r\n      icon: 'flight_takeoff',\r\n      state: 'customer/users'\r\n    },\r\n    {\r\n      type: 'separator',\r\n      name: 'Main Items'\r\n    }\r\n  ];\r\n\r\n  // Icon menu TITLE at the very top of navigation.\r\n  // This title will appear if any icon type item is present in menu.\r\n  iconTypeMenuTitle: string = 'Frequently Accessed';\r\n  // sets iconMenu as default;\r\n  menuItems = new BehaviorSubject<IMenuItem[]>(this.iconMenu);\r\n  // navigation component has subscribed to this Observable\r\n  menuItems$ = this.menuItems.asObservable();\r\n\r\n  // Customizer component uses this method to change menu.\r\n  // You can remove this method and customizer component.\r\n  // Or you can customize this method to supply different menu for\r\n  // different user type.\r\n  publishNavigationChange(menuType: string) {\r\n    switch (menuType) {\r\n      // case 'separator-menu':\r\n      //   this.menuItems.next(this.separatorMenu);\r\n      //   break;\r\n      // case 'icon-menu':\r\n      //   this.menuItems.next(this.iconMenu);\r\n      //   break;\r\n      default:\r\n        this.menuItems.next(this.iconMenu);\r\n    }\r\n  }\r\n}","import { Injectable, HostListener } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { getQueryParam } from '../helpers/url.helper';\r\n\r\ninterface ILayoutConf {\r\n  navigationPos?: string;   // side, top\r\n  sidebarStyle?: string;    // full, compact, closed\r\n  dir?: string;             // ltr, rtl\r\n  layoutInTransition?: boolean;\r\n  isMobile?: boolean,\r\n  useBreadcrumb?: boolean,\r\n  breadcrumb?: string,      // simple, title\r\n  topbarFixed?: boolean\r\n}\r\ninterface ILayoutChangeOptions {\r\n  duration?: number,\r\n  transitionClass?: boolean\r\n}\r\ninterface IAdjustScreenOptions {\r\n  browserEvent?: any,\r\n  route?: string\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class LayoutService {\r\n  public layoutConf: ILayoutConf;\r\n  layoutConfSubject = new BehaviorSubject<ILayoutConf>(this.layoutConf);\r\n  layoutConf$ = this.layoutConfSubject.asObservable();\r\n  public isMobile: boolean;\r\n  public currentRoute: string;\r\n  public fullWidthRoutes = ['shop'];\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) {\r\n    this.setAppLayout();\r\n  }\r\n\r\n  setAppLayout() {\r\n    //******** SET YOUR LAYOUT OPTIONS HERE *********\r\n    this.layoutConf = {\r\n      \"navigationPos\": \"top\",    // side, top\r\n      \"sidebarStyle\": \"full\",     // full, compact, closed\r\n      \"dir\": \"ltr\",               // ltr, rtl\r\n      \"useBreadcrumb\": true,\r\n      \"topbarFixed\": false,\r\n      \"breadcrumb\": \"title\"       // simple, title\r\n    }\r\n\r\n    //******* Only for demo purpose ***\r\n    this.setLayoutFromQuery();\r\n    //**********************\r\n  }\r\n\r\n  publishLayoutChange(lc: ILayoutConf, opt: ILayoutChangeOptions = {}) {\r\n    let duration = opt.duration || 250;\r\n    if (!opt.transitionClass) {\r\n      this.layoutConf = Object.assign(this.layoutConf, lc);\r\n      return this.layoutConfSubject.next(this.layoutConf);\r\n    }\r\n\r\n    this.layoutConf = Object.assign(this.layoutConf, lc, { layoutInTransition: true });\r\n    this.layoutConfSubject.next(this.layoutConf);\r\n\r\n    setTimeout(() => {\r\n      this.layoutConf = Object.assign(this.layoutConf, { layoutInTransition: false });\r\n      this.layoutConfSubject.next(this.layoutConf);\r\n    }, duration);\r\n  }\r\n\r\n  setLayoutFromQuery() {\r\n    let layoutConfString = getQueryParam('layout');\r\n    try {\r\n      this.layoutConf = JSON.parse(layoutConfString);\r\n    } catch (e) { }\r\n  }\r\n\r\n  \r\n  adjustLayout(options: IAdjustScreenOptions = {}) {\r\n    let sidebarStyle: string;\r\n    this.isMobile = this.isSm();\r\n    this.currentRoute = options.route || this.currentRoute;\r\n    sidebarStyle = this.isMobile ? 'closed' : this.layoutConf.sidebarStyle;\r\n    \r\n    if (this.currentRoute) {\r\n      this.fullWidthRoutes.forEach(route => {\r\n        if(this.currentRoute.indexOf(route) !== -1) {\r\n          sidebarStyle =  'closed';\r\n        }\r\n      })\r\n    }\r\n\r\n    this.publishLayoutChange({\r\n      isMobile: this.isMobile,\r\n      sidebarStyle: sidebarStyle\r\n    });\r\n  }\r\n  isSm() {\r\n    return window.matchMedia(`(max-width: 959px)`).matches;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\ninterface IMenuItem {\r\n  type: string,       // Possible values: link/dropDown/icon/separator/extLink\r\n  name?: string,      // Used as display text for item and title for separator type\r\n  state?: string,     // Router state\r\n  icon?: string,      // Material icon name\r\n  tooltip?: string,   // Tooltip text \r\n  disabled?: boolean, // If true, item will not be appeared in sidenav.\r\n  sub?: IChildItem[], // Dropdown items\r\n  badges?: IBadge[]\r\n}\r\ninterface IChildItem {\r\n  type?: string,\r\n  name: string,       // Display text\r\n  state?: string,     // Router state\r\n  icon?: string,\r\n  sub?: IChildItem[]\r\n}\r\n\r\ninterface IBadge {\r\n  color: string;      // primary/accent/warn/hex color codes(#fff000)\r\n  value: string;      // Display text\r\n}\r\n\r\n@Injectable()\r\nexport class NavigationService {\r\n  constructor() { }\r\n\r\n  iconMenu: IMenuItem[] = [\r\n    {\r\n      name: 'HOME',\r\n      type: 'icon',\r\n      tooltip: 'Home',\r\n      icon: 'home',\r\n      state: 'home'\r\n    },\r\n    {\r\n      name: 'PROFILE',\r\n      type: 'icon',\r\n      tooltip: 'Profile',\r\n      icon: 'person',\r\n      state: 'profile/overview'\r\n    },\r\n    {\r\n      name: 'TOUR',\r\n      type: 'icon',\r\n      tooltip: 'Tour',\r\n      icon: 'flight_takeoff',\r\n      state: 'tour'\r\n    },\r\n    {\r\n      type: 'separator',\r\n      name: 'Main Items'\r\n    },\r\n    {\r\n      name: 'DASHBOARD01',\r\n      type: 'link',\r\n      tooltip: 'Dashboard',\r\n      icon: 'dashboard',\r\n      state: 'admin'\r\n    },\r\n    {\r\n      name: 'DOC01',\r\n      type: 'extLink',\r\n      tooltip: 'Documentation',\r\n      icon: 'library_books',\r\n      state: 'admin/Nested3'\r\n    }\r\n  ]\r\n\r\n  // Icon menu TITLE at the very top of navigation.\r\n  // This title will appear if any icon type item is present in menu.\r\n  iconTypeMenuTitle: string = 'Frequently Accessed';\r\n  // sets iconMenu as default;\r\n  menuItems = new BehaviorSubject<IMenuItem[]>(this.iconMenu);\r\n  // navigation component has subscribed to this Observable\r\n  menuItems$ = this.menuItems.asObservable();\r\n\r\n  // Customizer component uses this method to change menu.\r\n  // You can remove this method and customizer component.\r\n  // Or you can customize this method to supply different menu for\r\n  // different user type.\r\n  publishNavigationChange(menuType: string) {\r\n    switch (menuType) {\r\n      // case 'separator-menu':\r\n      //   this.menuItems.next(this.separatorMenu);\r\n      //   break;\r\n      // case 'icon-menu':\r\n      //   this.menuItems.next(this.iconMenu);\r\n      //   break;\r\n      default:\r\n        this.menuItems.next(this.iconMenu);\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd, ActivatedRouteSnapshot, Params, PRIMARY_OUTLET } from \"@angular/router\";\r\n\r\ninterface IRoutePart {\r\n  title: string,\r\n  breadcrumb: string,\r\n  params?: Params,\r\n  url: string,\r\n  urlSegments: any[]\r\n}\r\n\r\n@Injectable()\r\nexport class RoutePartsService {\r\n  public routeParts: IRoutePart[];\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n  generateRouteParts(snapshot: ActivatedRouteSnapshot): IRoutePart[] {\r\n    var routeParts = <IRoutePart[]>[];\r\n    if (snapshot) {\r\n      if (snapshot.firstChild) {\r\n        routeParts = routeParts.concat(this.generateRouteParts(snapshot.firstChild));\r\n      }\r\n      if (snapshot.data['title'] && snapshot.url.length) {\r\n        // console.log(snapshot.data['title'], snapshot.url)\r\n        routeParts.push({\r\n          title: snapshot.data['title'], \r\n          breadcrumb: snapshot.data['breadcrumb'], \r\n          url: snapshot.url[0].path,\r\n          urlSegments: snapshot.url,\r\n          params: snapshot.params\r\n        });\r\n      }\r\n    }\r\n    return routeParts;\r\n  }\r\n}","import { Injectable, Inject, Renderer2 } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport  { getQueryParam } from '../helpers/url.helper';\r\n\r\ninterface ITheme {\r\n  name: string,\r\n  baseColor?: string,\r\n  isActive?: boolean\r\n}\r\n\r\n@Injectable()\r\nexport class ThemeService {\r\n  public egretThemes :ITheme[]  = [{\r\n    \"name\": \"egret-dark-purple\",\r\n    \"baseColor\": \"#9c27b0\",\r\n    \"isActive\": false\r\n  }, {\r\n    \"name\": \"egret-dark-pink\",\r\n    \"baseColor\": \"#e91e63\",\r\n    \"isActive\": false\r\n  }, {\r\n    \"name\": \"egret-blue\",\r\n    \"baseColor\": \"#247ba0\",\r\n    \"isActive\": false\r\n  }, {\r\n    \"name\": \"egret-indigo\",\r\n    \"baseColor\": \"#3f51b5\",\r\n    \"isActive\": true \r\n  }];\r\n  public activatedTheme: ITheme;\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {}\r\n\r\n  // Invoked in AppComponent and apply 'activatedTheme' on startup\r\n  applyMatTheme(r: Renderer2) {\r\n    /*\r\n    ****** (SET YOUR DEFAULT THEME HERE) *******\r\n    * Assign new Theme to activatedTheme\r\n    */\r\n    // this.activatedTheme = this.egretThemes[0]; \r\n    // this.activatedTheme = this.egretThemes[1]; \r\n    // this.activatedTheme = this.egretThemes[2]; \r\n    this.activatedTheme = this.egretThemes[3];\r\n\r\n    // *********** ONLY FOR DEMO **********\r\n    this.setThemeFromQuery();\r\n    // ************************************\r\n\r\n    this.changeTheme(r, this.activatedTheme)\r\n  }\r\n\r\n  changeTheme(r: Renderer2, theme:ITheme) {\r\n    r.removeClass(this.document.body, this.activatedTheme.name);\r\n    r.addClass(this.document.body, theme.name);\r\n    this.flipActiveFlag(theme)\r\n  }\r\n  flipActiveFlag(theme:ITheme) {\r\n    this.egretThemes.forEach((t) => {\r\n      t.isActive = false;\r\n      if(t.name === theme.name) {\r\n        t.isActive = true;\r\n        this.activatedTheme = theme;\r\n      }\r\n    });\r\n  }\r\n\r\n  // *********** ONLY FOR DEMO **********\r\n  setThemeFromQuery() {\r\n    let themeStr = getQueryParam('theme');\r\n    try {\r\n      this.activatedTheme = JSON.parse(themeStr);\r\n      this.flipActiveFlag(this.activatedTheme);\r\n    } catch(e) {}\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\n\r\nimport { \r\n  MatSidenavModule,\r\n  MatListModule,\r\n  MatTooltipModule,\r\n  MatOptionModule,\r\n  MatSelectModule,\r\n  MatMenuModule,\r\n  MatSnackBarModule,\r\n  MatGridListModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatRadioModule,\r\n  MatCheckboxModule,\r\n  MatCardModule,\r\n  MatProgressSpinnerModule,\r\n  MatRippleModule,\r\n  MatDialogModule\r\n} from '@angular/material';\r\n\r\n// ONLY REQUIRED FOR **SIDE** NAVIGATION LAYOUT\r\nimport { HeaderSideComponent } from './components/header-side/header-side.component';\r\nimport { SidebarSideComponent } from './components/sidebar-side/sidebar-side.component';\r\n\r\n// ONLY REQUIRED FOR **TOP** NAVIGATION LAYOUT\r\nimport { HeaderTopComponent } from './components/header-top/header-top.component';\r\nimport { customerHeaderTopComponent } from './components/customer-header/customer-header-top.component';\r\nimport { AdvisorHeaderTopComponent } from './components/advisor-header/advisor-header-top.component';\r\nimport { SidebarTopComponent } from './components/sidebar-top/sidebar-top.component';\r\n\r\n// ONLY FOR DEMO (Removable without changing any layout configuration)\r\nimport { CustomizerComponent } from './components/customizer/customizer.component';\r\n\r\n// ALL TIME REQUIRED \r\nimport { AdminLayoutComponent } from './components/layouts/admin-layout/admin-layout.component';\r\nimport { AdvisorLayoutComponent } from './components/layouts/advisor-layout/advisor-layout.component';\r\nimport { AuthLayoutComponent } from './components/layouts/auth-layout/auth-layout.component';\r\nimport { CustomerLayoutComponent } from './components/layouts/customer-layout/customer-layout.component';\r\nimport { LandingLayoutComponent } from './components/layouts/landing-layout/landing-layout.component';\r\nimport { NotificationsComponent } from './components/notifications/notifications.component';\r\nimport { SidenavComponent } from './components/sidenav/sidenav.component';\r\nimport { BreadcrumbComponent } from './components/breadcrumb/breadcrumb.component';\r\nimport { AppComfirmComponent } from './services/app-confirm/app-confirm.component';\r\nimport { AppLoaderComponent } from './services/app-loader/app-loader.component';\r\n\r\n// DIRECTIVES\r\nimport { FontSizeDirective } from './directives/font-size.directive';\r\nimport { ScrollToDirective } from './directives/scroll-to.directive';\r\nimport { AppDropdownDirective } from './directives/dropdown.directive';\r\nimport { DropdownAnchorDirective } from './directives/dropdown-anchor.directive';\r\nimport { DropdownLinkDirective } from './directives/dropdown-link.directive';\r\nimport { EgretSideNavToggleDirective } from './directives/egret-side-nav-toggle.directive';\r\n\r\n// PIPES\r\nimport { RelativeTimePipe } from './pipes/relative-time.pipe';\r\nimport { ExcerptPipe } from \"./pipes/excerpt.pipe\";\r\nimport { GetValueByKeyPipe } from './pipes/get-value-by-key.pipe';\r\n\r\n// SERVICES\r\nimport { ThemeService } from './services/theme.service';\r\nimport { LayoutService } from './services/layout.service';\r\nimport { NavigationService } from './services/navigation.service';\r\nimport { CustNavService } from './services/customer-nav-links.service';\r\nimport { AdvisorNavService } from './services/advisor-nav-links.service';\r\nimport { RoutePartsService } from './services/route-parts.service';\r\nimport { AuthGuard } from './services/auth/auth.guard';\r\nimport { AppConfirmService } from './services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from './services/app-loader/app-loader.service';\r\n\r\n\r\n/* \r\n  Only Required if you want to use Angular Landing\r\n  (https://themeforest.net/item/angular-landing-material-design-angular-app-landing-page/21198258)\r\n*/\r\n// import { LandingPageService } from '../shared/services/landing-page.service';\r\n\r\nconst classesToInclude = [\r\n  HeaderTopComponent,\r\n  customerHeaderTopComponent,\r\n  AdvisorHeaderTopComponent,\r\n  SidebarTopComponent,\r\n  SidenavComponent,\r\n  NotificationsComponent,\r\n  SidebarSideComponent,\r\n  HeaderSideComponent,\r\n  AdminLayoutComponent,\r\n  AdvisorLayoutComponent,\r\n  AuthLayoutComponent,\r\n  CustomerLayoutComponent,\r\n  LandingLayoutComponent,\r\n  BreadcrumbComponent,\r\n  AppComfirmComponent,\r\n  AppLoaderComponent,\r\n  CustomizerComponent,\r\n  FontSizeDirective,\r\n  ScrollToDirective,\r\n  AppDropdownDirective,\r\n  DropdownAnchorDirective,\r\n  DropdownLinkDirective,\r\n  EgretSideNavToggleDirective,\r\n  RelativeTimePipe,\r\n  ExcerptPipe,\r\n  GetValueByKeyPipe\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    FlexLayoutModule,\r\n    TranslateModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatTooltipModule,\r\n    MatOptionModule,\r\n    MatSelectModule,\r\n    MatMenuModule,\r\n    MatSnackBarModule,\r\n    MatGridListModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatCardModule,\r\n    MatProgressSpinnerModule,\r\n    MatRippleModule,\r\n    MatDialogModule,\r\n    PerfectScrollbarModule\r\n  ],\r\n  entryComponents: [AppComfirmComponent, AppLoaderComponent],\r\n  providers: [\r\n    ThemeService,\r\n    LayoutService,\r\n    NavigationService,\r\n    CustNavService,\r\n    AdvisorNavService,\r\n    RoutePartsService,\r\n    AuthGuard,\r\n    AppConfirmService,\r\n    AppLoaderService\r\n    // LandingPageService\r\n  ],\r\n  declarations: classesToInclude,\r\n  exports: classesToInclude\r\n})\r\nexport class SharedModule { }\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiURL: 'developmentApi'\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}